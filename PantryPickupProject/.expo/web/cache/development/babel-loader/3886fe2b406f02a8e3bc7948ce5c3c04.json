{"ast":null,"code":"'use strict';\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _excluded = [\"style\"],\n    _excluded2 = [\"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar View = require(\"../Components/View/View\");\n\nvar _require = require(\"./AnimatedEvent\"),\n    AnimatedEvent = _require.AnimatedEvent;\n\nvar AnimatedProps = require(\"./nodes/AnimatedProps\");\n\nvar React = require('react');\n\nvar NativeAnimatedHelper = require(\"./NativeAnimatedHelper\");\n\nvar invariant = require('invariant');\n\nvar setAndForwardRef = require(\"../Utilities/setAndForwardRef\");\n\nvar animatedComponentNextId = 1;\n\nfunction createAnimatedComponent(Component) {\n  invariant(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, '`createAnimatedComponent` does not support stateless functional components; ' + 'use a class component instead.');\n\n  var AnimatedComponent = function (_React$Component) {\n    _inherits(AnimatedComponent, _React$Component);\n\n    var _super = _createSuper(AnimatedComponent);\n\n    function AnimatedComponent() {\n      var _this;\n\n      _classCallCheck(this, AnimatedComponent);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this._invokeAnimatedPropsCallbackOnMount = false;\n      _this._eventDetachers = [];\n      _this._animatedComponentId = animatedComponentNextId++ + \":animatedComponent\";\n\n      _this._isFabric = function () {\n        var _this$_component$_int, _this$_component$_int2, _this$_component$getN, _this$_component$getN2, _this$_component$getS, _this$_component$getS2;\n\n        if (_this._component == null) {\n          return false;\n        }\n\n        return ((_this$_component$_int = _this._component['_internalInstanceHandle']) == null ? void 0 : (_this$_component$_int2 = _this$_component$_int.stateNode) == null ? void 0 : _this$_component$_int2.canonical) != null || _this._component.getNativeScrollRef != null && _this._component.getNativeScrollRef() != null && ((_this$_component$getN = _this._component.getNativeScrollRef()['_internalInstanceHandle']) == null ? void 0 : (_this$_component$getN2 = _this$_component$getN.stateNode) == null ? void 0 : _this$_component$getN2.canonical) != null || _this._component.getScrollResponder != null && _this._component.getScrollResponder() != null && _this._component.getScrollResponder().getNativeScrollRef != null && _this._component.getScrollResponder().getNativeScrollRef() != null && ((_this$_component$getS = _this._component.getScrollResponder().getNativeScrollRef()['_internalInstanceHandle']) == null ? void 0 : (_this$_component$getS2 = _this$_component$getS.stateNode) == null ? void 0 : _this$_component$getS2.canonical) != null;\n      };\n\n      _this._waitForUpdate = function () {\n        if (_this._isFabric()) {\n          NativeAnimatedHelper.API.setWaitingForIdentifier(_this._animatedComponentId);\n        }\n      };\n\n      _this._markUpdateComplete = function () {\n        if (_this._isFabric()) {\n          NativeAnimatedHelper.API.unsetWaitingForIdentifier(_this._animatedComponentId);\n        }\n      };\n\n      _this._animatedPropsCallback = function () {\n        if (_this._component == null) {\n          _this._invokeAnimatedPropsCallbackOnMount = true;\n        } else if (process.env.NODE_ENV === 'test' || typeof _this._component.setNativeProps !== 'function' || _this._isFabric()) {\n          _this.forceUpdate();\n        } else if (!_this._propsAnimated.__isNative) {\n          _this._component.setNativeProps(_this._propsAnimated.__getAnimatedValue());\n        } else {\n          throw new Error('Attempting to run JS driven animation on animated ' + 'node that has been moved to \"native\" earlier by starting an ' + 'animation with `useNativeDriver: true`');\n        }\n      };\n\n      _this._setComponentRef = setAndForwardRef({\n        getForwardedRef: function getForwardedRef() {\n          return _this.props.forwardedRef;\n        },\n        setLocalRef: function setLocalRef(ref) {\n          _this._prevComponent = _this._component;\n          _this._component = ref;\n\n          if (ref != null && ref.getNode == null) {\n            ref.getNode = function () {\n              var _ref$constructor$name;\n\n              console.warn('%s: Calling `getNode()` on the ref of an Animated component ' + 'is no longer necessary. You can now directly use the ref ' + 'instead. This method will be removed in a future release.', (_ref$constructor$name = ref.constructor.name) != null ? _ref$constructor$name : '<<anonymous>>');\n              return ref;\n            };\n          }\n        }\n      });\n      return _this;\n    }\n\n    _createClass(AnimatedComponent, [{\n      key: \"_attachNativeEvents\",\n      value: function _attachNativeEvents() {\n        var _this$_component,\n            _this2 = this;\n\n        var scrollableNode = (_this$_component = this._component) != null && _this$_component.getScrollableNode ? this._component.getScrollableNode() : this._component;\n\n        var _loop = function _loop(key) {\n          var prop = _this2.props[key];\n\n          if (prop instanceof AnimatedEvent && prop.__isNative) {\n            prop.__attach(scrollableNode, key);\n\n            _this2._eventDetachers.push(function () {\n              return prop.__detach(scrollableNode, key);\n            });\n          }\n        };\n\n        for (var key in this.props) {\n          _loop(key);\n        }\n      }\n    }, {\n      key: \"_detachNativeEvents\",\n      value: function _detachNativeEvents() {\n        this._eventDetachers.forEach(function (remove) {\n          return remove();\n        });\n\n        this._eventDetachers = [];\n      }\n    }, {\n      key: \"_attachProps\",\n      value: function _attachProps(nextProps) {\n        var oldPropsAnimated = this._propsAnimated;\n\n        if (nextProps === oldPropsAnimated) {\n          return;\n        }\n\n        this._propsAnimated = new AnimatedProps(nextProps, this._animatedPropsCallback);\n\n        if (oldPropsAnimated) {\n          oldPropsAnimated.__restoreDefaultValues();\n\n          oldPropsAnimated.__detach();\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _props$nativeID;\n\n        var _ref = this._propsAnimated.__getValue() || {},\n            _ref$style = _ref.style,\n            style = _ref$style === void 0 ? {} : _ref$style,\n            props = _objectWithoutProperties(_ref, _excluded);\n\n        var _ref2 = this.props.passthroughAnimatedPropExplicitValues || {},\n            _ref2$style = _ref2.style,\n            passthruStyle = _ref2$style === void 0 ? {} : _ref2$style,\n            passthruProps = _objectWithoutProperties(_ref2, _excluded2);\n\n        var mergedStyle = _objectSpread(_objectSpread({}, style), passthruStyle);\n\n        return _reactJsxRuntime.jsx(Component, _objectSpread(_objectSpread(_objectSpread({}, props), passthruProps), {}, {\n          style: mergedStyle,\n          ref: this._setComponentRef,\n          nativeID: (_props$nativeID = props.nativeID) != null ? _props$nativeID : this._isFabric() ? 'animatedComponent' : undefined,\n          collapsable: this._propsAnimated.__isNative ? false : props.collapsable\n        }));\n      }\n    }, {\n      key: \"UNSAFE_componentWillMount\",\n      value: function UNSAFE_componentWillMount() {\n        this._waitForUpdate();\n\n        this._attachProps(this.props);\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        if (this._invokeAnimatedPropsCallbackOnMount) {\n          this._invokeAnimatedPropsCallbackOnMount = false;\n\n          this._animatedPropsCallback();\n        }\n\n        this._propsAnimated.setNativeView(this._component);\n\n        this._attachNativeEvents();\n\n        this._markUpdateComplete();\n      }\n    }, {\n      key: \"UNSAFE_componentWillReceiveProps\",\n      value: function UNSAFE_componentWillReceiveProps(newProps) {\n        this._waitForUpdate();\n\n        this._attachProps(newProps);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        if (this._component !== this._prevComponent) {\n          this._propsAnimated.setNativeView(this._component);\n        }\n\n        if (this._component !== this._prevComponent || prevProps !== this.props) {\n          this._detachNativeEvents();\n\n          this._attachNativeEvents();\n        }\n\n        this._markUpdateComplete();\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this._propsAnimated && this._propsAnimated.__detach();\n\n        this._detachNativeEvents();\n\n        this._markUpdateComplete();\n      }\n    }]);\n\n    return AnimatedComponent;\n  }(React.Component);\n\n  return React.forwardRef(function AnimatedComponentWrapper(props, ref) {\n    return _reactJsxRuntime.jsx(AnimatedComponent, _objectSpread(_objectSpread({}, props), ref == null ? null : {\n      forwardedRef: ref\n    }));\n  });\n}\n\nmodule.exports = createAnimatedComponent;","map":{"version":3,"sources":["C:/Users/nicol/Documents/Repos/HackDavis/PantryPickupProject/node_modules/react-native/Libraries/Animated/createAnimatedComponent.js"],"names":["View","require","AnimatedEvent","AnimatedProps","React","NativeAnimatedHelper","invariant","setAndForwardRef","animatedComponentNextId","createAnimatedComponent","Component","prototype","isReactComponent","AnimatedComponent","_invokeAnimatedPropsCallbackOnMount","_eventDetachers","_animatedComponentId","_isFabric","_component","stateNode","canonical","getNativeScrollRef","getScrollResponder","_waitForUpdate","API","setWaitingForIdentifier","_markUpdateComplete","unsetWaitingForIdentifier","_animatedPropsCallback","process","env","NODE_ENV","setNativeProps","forceUpdate","_propsAnimated","__isNative","__getAnimatedValue","Error","_setComponentRef","getForwardedRef","props","forwardedRef","setLocalRef","ref","_prevComponent","getNode","console","warn","constructor","name","scrollableNode","getScrollableNode","key","prop","__attach","push","__detach","forEach","remove","nextProps","oldPropsAnimated","__restoreDefaultValues","__getValue","style","passthroughAnimatedPropExplicitValues","passthruStyle","passthruProps","mergedStyle","nativeID","undefined","collapsable","_attachProps","setNativeView","_attachNativeEvents","newProps","prevProps","_detachNativeEvents","forwardRef","AnimatedComponentWrapper","module","exports"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,2BAApB;;AACA,eAAwBA,OAAO,mBAA/B;AAAA,IAAOC,aAAP,YAAOA,aAAP;;AACA,IAAMC,aAAa,GAAGF,OAAO,yBAA7B;;AACA,IAAMG,KAAK,GAAGH,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMI,oBAAoB,GAAGJ,OAAO,0BAApC;;AAEA,IAAMK,SAAS,GAAGL,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMM,gBAAgB,GAAGN,OAAO,iCAAhC;;AAEA,IAAIO,uBAAuB,GAAG,CAA9B;;AAkBA,SAASC,uBAAT,CACEC,SADF,EAE0C;AACxCJ,EAAAA,SAAS,CACP,OAAOI,SAAP,KAAqB,UAArB,IACGA,SAAS,CAACC,SAAV,IAAuBD,SAAS,CAACC,SAAV,CAAoBC,gBAFvC,EAGP,iFACE,gCAJK,CAAT;;AADwC,MAQlCC,iBARkC;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,YAUtCC,mCAVsC,GAUS,KAVT;AAAA,YAatCC,eAbsC,GAaH,EAbG;AAAA,YAgBtCC,oBAhBsC,GAgBJR,uBAAuB,EAhBnB;;AAAA,YAuCtCS,SAvCsC,GAuC1B,YAAe;AAAA;;AACzB,YAAI,MAAKC,UAAL,IAAmB,IAAvB,EAA6B;AAC3B,iBAAO,KAAP;AACD;;AACD,eAEE,gCAAKA,UAAL,CAAgB,yBAAhB,sEAA4CC,SAA5C,4CAAuDC,SAAvD,KACE,IADF,IAUC,MAAKF,UAAL,CAAgBG,kBAAhB,IAAsC,IAAtC,IACC,MAAKH,UAAL,CAAgBG,kBAAhB,MAAwC,IADzC,IAGC,gCAAKH,UAAL,CAAgBG,kBAAhB,GAAqC,yBAArC,sEACIF,SADJ,4CACeC,SADf,KAC4B,IAd9B,IAeC,MAAKF,UAAL,CAAgBI,kBAAhB,IAAsC,IAAtC,IACC,MAAKJ,UAAL,CAAgBI,kBAAhB,MAAwC,IADzC,IAEC,MAAKJ,UAAL,CAAgBI,kBAAhB,GAAqCD,kBAArC,IAA2D,IAF5D,IAGC,MAAKH,UAAL,CAAgBI,kBAAhB,GAAqCD,kBAArC,MAA6D,IAH9D,IAIC,gCAAKH,UAAL,CAAgBI,kBAAhB,GAAqCD,kBAArC,GAEE,yBAFF,sEAGGF,SAHH,4CAGcC,SAHd,KAG2B,IAxB/B;AA0BD,OArEqC;;AAAA,YAuEtCG,cAvEsC,GAuErB,YAAY;AAC3B,YAAI,MAAKN,SAAL,EAAJ,EAAsB;AACpBZ,UAAAA,oBAAoB,CAACmB,GAArB,CAAyBC,uBAAzB,CACE,MAAKT,oBADP;AAGD;AACF,OA7EqC;;AAAA,YA+EtCU,mBA/EsC,GA+EhB,YAAY;AAChC,YAAI,MAAKT,SAAL,EAAJ,EAAsB;AACpBZ,UAAAA,oBAAoB,CAACmB,GAArB,CAAyBG,yBAAzB,CACE,MAAKX,oBADP;AAGD;AACF,OArFqC;;AAAA,YA6FtCY,sBA7FsC,GA6Fb,YAAM;AAC7B,YAAI,MAAKV,UAAL,IAAmB,IAAvB,EAA6B;AAM3B,gBAAKJ,mCAAL,GAA2C,IAA3C;AACD,SAPD,MAOO,IACLe,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAAzB,IAEA,OAAO,MAAKb,UAAL,CAAgBc,cAAvB,KAA0C,UAF1C,IAIA,MAAKf,SAAL,EALK,EAML;AACA,gBAAKgB,WAAL;AACD,SARM,MAQA,IAAI,CAAC,MAAKC,cAAL,CAAoBC,UAAzB,EAAqC;AAC1C,gBAAKjB,UAAL,CAAgBc,cAAhB,CACE,MAAKE,cAAL,CAAoBE,kBAApB,EADF;AAGD,SAJM,MAIA;AACL,gBAAM,IAAIC,KAAJ,CACJ,uDACE,8DADF,GAEE,wCAHE,CAAN;AAKD;AACF,OAxHqC;;AAAA,YAoJtCC,gBApJsC,GAoJnB/B,gBAAgB,CAAC;AAClCgC,QAAAA,eAAe,EAAE;AAAA,iBAAM,MAAKC,KAAL,CAAWC,YAAjB;AAAA,SADiB;AAElCC,QAAAA,WAAW,EAAE,qBAAAC,GAAG,EAAI;AAClB,gBAAKC,cAAL,GAAsB,MAAK1B,UAA3B;AACA,gBAAKA,UAAL,GAAkByB,GAAlB;;AAGA,cAAIA,GAAG,IAAI,IAAP,IAAeA,GAAG,CAACE,OAAJ,IAAe,IAAlC,EAAwC;AACtCF,YAAAA,GAAG,CAACE,OAAJ,GAAc,YAAM;AAAA;;AAClBC,cAAAA,OAAO,CAACC,IAAR,CACE,iEACE,2DADF,GAEE,2DAHJ,2BAIEJ,GAAG,CAACK,WAAJ,CAAgBC,IAJlB,oCAI0B,eAJ1B;AAMA,qBAAON,GAAP;AACD,aARD;AASD;AACF;AAlBiC,OAAD,CApJG;AAAA;AAAA;;AAAA;AAAA;AAAA,aAkBtC,+BAAsB;AAAA;AAAA;;AAGpB,YAAMO,cAAc,GAAG,yBAAKhC,UAAL,8BAAiBiC,iBAAjB,GACnB,KAAKjC,UAAL,CAAgBiC,iBAAhB,EADmB,GAEnB,KAAKjC,UAFT;;AAHoB,mCAOTkC,GAPS;AAQlB,cAAMC,IAAI,GAAG,MAAI,CAACb,KAAL,CAAWY,GAAX,CAAb;;AACA,cAAIC,IAAI,YAAYnD,aAAhB,IAAiCmD,IAAI,CAAClB,UAA1C,EAAsD;AACpDkB,YAAAA,IAAI,CAACC,QAAL,CAAcJ,cAAd,EAA8BE,GAA9B;;AACA,YAAA,MAAI,CAACrC,eAAL,CAAqBwC,IAArB,CAA0B;AAAA,qBAAMF,IAAI,CAACG,QAAL,CAAcN,cAAd,EAA8BE,GAA9B,CAAN;AAAA,aAA1B;AACD;AAZiB;;AAOpB,aAAK,IAAMA,GAAX,IAAkB,KAAKZ,KAAvB,EAA8B;AAAA,gBAAnBY,GAAmB;AAM7B;AACF;AAhCqC;AAAA;AAAA,aAkCtC,+BAAsB;AACpB,aAAKrC,eAAL,CAAqB0C,OAArB,CAA6B,UAAAC,MAAM;AAAA,iBAAIA,MAAM,EAAV;AAAA,SAAnC;;AACA,aAAK3C,eAAL,GAAuB,EAAvB;AACD;AArCqC;AAAA;AAAA,aA0HtC,sBAAa4C,SAAb,EAAwB;AACtB,YAAMC,gBAAgB,GAAG,KAAK1B,cAA9B;;AAEA,YAAIyB,SAAS,KAAKC,gBAAlB,EAAoC;AAClC;AACD;;AAED,aAAK1B,cAAL,GAAsB,IAAI/B,aAAJ,CACpBwD,SADoB,EAEpB,KAAK/B,sBAFe,CAAtB;;AAaA,YAAIgC,gBAAJ,EAAsB;AACpBA,UAAAA,gBAAgB,CAACC,sBAAjB;;AACAD,UAAAA,gBAAgB,CAACJ,QAAjB;AACD;AACF;AAlJqC;AAAA;AAAA,aAyKtC,kBAAS;AAAA;;AACP,mBAA+B,KAAKtB,cAAL,CAAoB4B,UAApB,MAAoC,EAAnE;AAAA,8BAAOC,KAAP;AAAA,YAAOA,KAAP,2BAAe,EAAf;AAAA,YAAsBvB,KAAtB;;AACA,oBACE,KAAKA,KAAL,CAAWwB,qCAAX,IAAoD,EADtD;AAAA,gCAAOD,KAAP;AAAA,YAAcE,aAAd,4BAA8B,EAA9B;AAAA,YAAqCC,aAArC;;AAEA,YAAMC,WAAW,mCAAOJ,KAAP,GAAiBE,aAAjB,CAAjB;;AACA,eACE,qBAAC,SAAD,gDACMzB,KADN,GAEM0B,aAFN;AAGE,UAAA,KAAK,EAAEC,WAHT;AAIE,UAAA,GAAG,EAAE,KAAK7B,gBAJZ;AAKE,UAAA,QAAQ,qBACNE,KAAK,CAAC4B,QADA,8BAEL,KAAKnD,SAAL,KAAmB,mBAAnB,GAAyCoD,SAP9C;AAaE,UAAA,WAAW,EACT,KAAKnC,cAAL,CAAoBC,UAApB,GAAiC,KAAjC,GAAyCK,KAAK,CAAC8B;AAdnD,WADF;AAmBD;AAjMqC;AAAA;AAAA,aAmMtC,qCAA4B;AAC1B,aAAK/C,cAAL;;AACA,aAAKgD,YAAL,CAAkB,KAAK/B,KAAvB;AACD;AAtMqC;AAAA;AAAA,aAwMtC,6BAAoB;AAClB,YAAI,KAAK1B,mCAAT,EAA8C;AAC5C,eAAKA,mCAAL,GAA2C,KAA3C;;AACA,eAAKc,sBAAL;AACD;;AAED,aAAKM,cAAL,CAAoBsC,aAApB,CAAkC,KAAKtD,UAAvC;;AACA,aAAKuD,mBAAL;;AACA,aAAK/C,mBAAL;AACD;AAjNqC;AAAA;AAAA,aAmNtC,0CAAiCgD,QAAjC,EAA2C;AACzC,aAAKnD,cAAL;;AACA,aAAKgD,YAAL,CAAkBG,QAAlB;AACD;AAtNqC;AAAA;AAAA,aAwNtC,4BAAmBC,SAAnB,EAA8B;AAC5B,YAAI,KAAKzD,UAAL,KAAoB,KAAK0B,cAA7B,EAA6C;AAC3C,eAAKV,cAAL,CAAoBsC,aAApB,CAAkC,KAAKtD,UAAvC;AACD;;AACD,YAAI,KAAKA,UAAL,KAAoB,KAAK0B,cAAzB,IAA2C+B,SAAS,KAAK,KAAKnC,KAAlE,EAAyE;AACvE,eAAKoC,mBAAL;;AACA,eAAKH,mBAAL;AACD;;AACD,aAAK/C,mBAAL;AACD;AAjOqC;AAAA;AAAA,aAmOtC,gCAAuB;AACrB,aAAKQ,cAAL,IAAuB,KAAKA,cAAL,CAAoBsB,QAApB,EAAvB;;AACA,aAAKoB,mBAAL;;AACA,aAAKlD,mBAAL;AACD;AAvOqC;;AAAA;AAAA,IAQRtB,KAAK,CAACM,SARE;;AA0OxC,SAAON,KAAK,CAACyE,UAAN,CAAiB,SAASC,wBAAT,CAAkCtC,KAAlC,EAAyCG,GAAzC,EAA8C;AACpE,WACE,qBAAC,iBAAD,kCACMH,KADN,GAEOG,GAAG,IAAI,IAAP,GAAc,IAAd,GAAqB;AAACF,MAAAA,YAAY,EAAEE;AAAf,KAF5B,EADF;AAMD,GAPM,CAAP;AAQD;;AAEDoC,MAAM,CAACC,OAAP,GAAiBvE,uBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst View = require('../Components/View/View');\nconst {AnimatedEvent} = require('./AnimatedEvent');\nconst AnimatedProps = require('./nodes/AnimatedProps');\nconst React = require('react');\nconst NativeAnimatedHelper = require('./NativeAnimatedHelper');\n\nconst invariant = require('invariant');\nconst setAndForwardRef = require('../Utilities/setAndForwardRef');\n\nlet animatedComponentNextId = 1;\n\nexport type AnimatedComponentType<\n  Props: {+[string]: mixed, ...},\n  Instance,\n> = React.AbstractComponent<\n  $ObjMap<\n    Props &\n      $ReadOnly<{\n        passthroughAnimatedPropExplicitValues?: React.ElementConfig<\n          typeof View,\n        >,\n      }>,\n    () => any,\n  >,\n  Instance,\n>;\n\nfunction createAnimatedComponent<Props: {+[string]: mixed, ...}, Instance>(\n  Component: React.AbstractComponent<Props, Instance>,\n): AnimatedComponentType<Props, Instance> {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    '`createAnimatedComponent` does not support stateless functional components; ' +\n      'use a class component instead.',\n  );\n\n  class AnimatedComponent extends React.Component<Object> {\n    _component: any; // TODO T53738161: flow type this, and the whole file\n    _invokeAnimatedPropsCallbackOnMount: boolean = false;\n    _prevComponent: any;\n    _propsAnimated: AnimatedProps;\n    _eventDetachers: Array<Function> = [];\n\n    // Only to be used in this file, and only in Fabric.\n    _animatedComponentId: string = `${animatedComponentNextId++}:animatedComponent`;\n\n    _attachNativeEvents() {\n      // Make sure to get the scrollable node for components that implement\n      // `ScrollResponder.Mixin`.\n      const scrollableNode = this._component?.getScrollableNode\n        ? this._component.getScrollableNode()\n        : this._component;\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (prop instanceof AnimatedEvent && prop.__isNative) {\n          prop.__attach(scrollableNode, key);\n          this._eventDetachers.push(() => prop.__detach(scrollableNode, key));\n        }\n      }\n    }\n\n    _detachNativeEvents() {\n      this._eventDetachers.forEach(remove => remove());\n      this._eventDetachers = [];\n    }\n\n    _isFabric = (): boolean => {\n      if (this._component == null) {\n        return false;\n      }\n      return (\n        // eslint-disable-next-line dot-notation\n        this._component['_internalInstanceHandle']?.stateNode?.canonical !=\n          null ||\n        // Some components have a setNativeProps function but aren't a host component\n        // such as lists like FlatList and SectionList. These should also use\n        // forceUpdate in Fabric since setNativeProps doesn't exist on the underlying\n        // host component. This crazy hack is essentially special casing those lists and\n        // ScrollView itself to use forceUpdate in Fabric.\n        // If these components end up using forwardRef then these hacks can go away\n        // as this._component would actually be the underlying host component and the above check\n        // would be sufficient.\n        (this._component.getNativeScrollRef != null &&\n          this._component.getNativeScrollRef() != null &&\n          // eslint-disable-next-line dot-notation\n          this._component.getNativeScrollRef()['_internalInstanceHandle']\n            ?.stateNode?.canonical != null) ||\n        (this._component.getScrollResponder != null &&\n          this._component.getScrollResponder() != null &&\n          this._component.getScrollResponder().getNativeScrollRef != null &&\n          this._component.getScrollResponder().getNativeScrollRef() != null &&\n          this._component.getScrollResponder().getNativeScrollRef()[\n            // eslint-disable-next-line dot-notation\n            '_internalInstanceHandle'\n          ]?.stateNode?.canonical != null)\n      );\n    };\n\n    _waitForUpdate = (): void => {\n      if (this._isFabric()) {\n        NativeAnimatedHelper.API.setWaitingForIdentifier(\n          this._animatedComponentId,\n        );\n      }\n    };\n\n    _markUpdateComplete = (): void => {\n      if (this._isFabric()) {\n        NativeAnimatedHelper.API.unsetWaitingForIdentifier(\n          this._animatedComponentId,\n        );\n      }\n    };\n\n    // The system is best designed when setNativeProps is implemented. It is\n    // able to avoid re-rendering and directly set the attributes that changed.\n    // However, setNativeProps can only be implemented on leaf native\n    // components. If you want to animate a composite component, you need to\n    // re-render it. In this case, we have a fallback that uses forceUpdate.\n    // This fallback is also called in Fabric.\n    _animatedPropsCallback = () => {\n      if (this._component == null) {\n        // AnimatedProps is created in will-mount because it's used in render.\n        // But this callback may be invoked before mount in async mode,\n        // In which case we should defer the setNativeProps() call.\n        // React may throw away uncommitted work in async mode,\n        // So a deferred call won't always be invoked.\n        this._invokeAnimatedPropsCallbackOnMount = true;\n      } else if (\n        process.env.NODE_ENV === 'test' ||\n        // For animating properties of non-leaf/non-native components\n        typeof this._component.setNativeProps !== 'function' ||\n        // In Fabric, force animations to go through forceUpdate and skip setNativeProps\n        this._isFabric()\n      ) {\n        this.forceUpdate();\n      } else if (!this._propsAnimated.__isNative) {\n        this._component.setNativeProps(\n          this._propsAnimated.__getAnimatedValue(),\n        );\n      } else {\n        throw new Error(\n          'Attempting to run JS driven animation on animated ' +\n            'node that has been moved to \"native\" earlier by starting an ' +\n            'animation with `useNativeDriver: true`',\n        );\n      }\n    };\n\n    _attachProps(nextProps) {\n      const oldPropsAnimated = this._propsAnimated;\n\n      if (nextProps === oldPropsAnimated) {\n        return;\n      }\n\n      this._propsAnimated = new AnimatedProps(\n        nextProps,\n        this._animatedPropsCallback,\n      );\n\n      // When you call detach, it removes the element from the parent list\n      // of children. If it goes to 0, then the parent also detaches itself\n      // and so on.\n      // An optimization is to attach the new elements and THEN detach the old\n      // ones instead of detaching and THEN attaching.\n      // This way the intermediate state isn't to go to 0 and trigger\n      // this expensive recursive detaching to then re-attach everything on\n      // the very next operation.\n      if (oldPropsAnimated) {\n        oldPropsAnimated.__restoreDefaultValues();\n        oldPropsAnimated.__detach();\n      }\n    }\n\n    _setComponentRef = setAndForwardRef({\n      getForwardedRef: () => this.props.forwardedRef,\n      setLocalRef: ref => {\n        this._prevComponent = this._component;\n        this._component = ref;\n\n        // TODO: Delete this in a future release.\n        if (ref != null && ref.getNode == null) {\n          ref.getNode = () => {\n            console.warn(\n              '%s: Calling `getNode()` on the ref of an Animated component ' +\n                'is no longer necessary. You can now directly use the ref ' +\n                'instead. This method will be removed in a future release.',\n              ref.constructor.name ?? '<<anonymous>>',\n            );\n            return ref;\n          };\n        }\n      },\n    });\n\n    render() {\n      const {style = {}, ...props} = this._propsAnimated.__getValue() || {};\n      const {style: passthruStyle = {}, ...passthruProps} =\n        this.props.passthroughAnimatedPropExplicitValues || {};\n      const mergedStyle = {...style, ...passthruStyle};\n      return (\n        <Component\n          {...props}\n          {...passthruProps}\n          style={mergedStyle}\n          ref={this._setComponentRef}\n          nativeID={\n            props.nativeID ??\n            (this._isFabric() ? 'animatedComponent' : undefined)\n          } /* TODO: T68258846. */\n          // The native driver updates views directly through the UI thread so we\n          // have to make sure the view doesn't get optimized away because it cannot\n          // go through the NativeViewHierarchyManager since it operates on the shadow\n          // thread.\n          collapsable={\n            this._propsAnimated.__isNative ? false : props.collapsable\n          }\n        />\n      );\n    }\n\n    UNSAFE_componentWillMount() {\n      this._waitForUpdate();\n      this._attachProps(this.props);\n    }\n\n    componentDidMount() {\n      if (this._invokeAnimatedPropsCallbackOnMount) {\n        this._invokeAnimatedPropsCallbackOnMount = false;\n        this._animatedPropsCallback();\n      }\n\n      this._propsAnimated.setNativeView(this._component);\n      this._attachNativeEvents();\n      this._markUpdateComplete();\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n      this._waitForUpdate();\n      this._attachProps(newProps);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this._component !== this._prevComponent) {\n        this._propsAnimated.setNativeView(this._component);\n      }\n      if (this._component !== this._prevComponent || prevProps !== this.props) {\n        this._detachNativeEvents();\n        this._attachNativeEvents();\n      }\n      this._markUpdateComplete();\n    }\n\n    componentWillUnmount() {\n      this._propsAnimated && this._propsAnimated.__detach();\n      this._detachNativeEvents();\n      this._markUpdateComplete();\n    }\n  }\n\n  return React.forwardRef(function AnimatedComponentWrapper(props, ref) {\n    return (\n      <AnimatedComponent\n        {...props}\n        {...(ref == null ? null : {forwardedRef: ref})}\n      />\n    );\n  });\n}\n\nmodule.exports = createAnimatedComponent;\n"]},"metadata":{},"sourceType":"script"}