{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport { useMemo, useContext } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var VirtualizedListContext = React.createContext(null);\nexport function VirtualizedListContextResetter(_ref) {\n  var children = _ref.children;\n  return _jsx(VirtualizedListContext.Provider, {\n    value: null,\n    children: children\n  });\n}\nexport function VirtualizedListContextProvider(_ref2) {\n  var children = _ref2.children,\n      value = _ref2.value;\n  var context = useMemo(function () {\n    return {\n      cellKey: null,\n      getScrollMetrics: value.getScrollMetrics,\n      horizontal: value.horizontal,\n      getOutermostParentListRef: value.getOutermostParentListRef,\n      getNestedChildState: value.getNestedChildState,\n      registerAsNestedChild: value.registerAsNestedChild,\n      unregisterAsNestedChild: value.unregisterAsNestedChild,\n      debugInfo: {\n        cellKey: value.debugInfo.cellKey,\n        horizontal: value.debugInfo.horizontal,\n        listKey: value.debugInfo.listKey,\n        parent: value.debugInfo.parent\n      }\n    };\n  }, [value.getScrollMetrics, value.horizontal, value.getOutermostParentListRef, value.getNestedChildState, value.registerAsNestedChild, value.unregisterAsNestedChild, value.debugInfo.cellKey, value.debugInfo.horizontal, value.debugInfo.listKey, value.debugInfo.parent]);\n  return _jsx(VirtualizedListContext.Provider, {\n    value: context,\n    children: children\n  });\n}\nexport function VirtualizedListCellContextProvider(_ref3) {\n  var cellKey = _ref3.cellKey,\n      children = _ref3.children;\n  var context = useContext(VirtualizedListContext);\n  return _jsx(VirtualizedListContext.Provider, {\n    value: context == null ? null : _objectSpread(_objectSpread({}, context), {}, {\n      cellKey: cellKey\n    }),\n    children: children\n  });\n}","map":{"version":3,"sources":["C:/Users/nicol/Documents/Repos/HackDavis/PantryPickupProject/node_modules/react-native/Libraries/Lists/VirtualizedListContext.js"],"names":["React","useMemo","useContext","VirtualizedListContext","createContext","VirtualizedListContextResetter","children","VirtualizedListContextProvider","value","context","cellKey","getScrollMetrics","horizontal","getOutermostParentListRef","getNestedChildState","registerAsNestedChild","unregisterAsNestedChild","debugInfo","listKey","parent","VirtualizedListCellContextProvider"],"mappings":"AAUA;;;;;;;;AAGA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,OAAR,EAAiBC,UAAjB,QAAkC,OAAlC;;AAsDA,OAAO,IAAMC,sBAA+C,GAAGH,KAAK,CAACI,aAAN,CAC7D,IAD6D,CAAxD;AAOP,OAAO,SAASC,8BAAT,OAIQ;AAAA,MAHbC,QAGa,QAHbA,QAGa;AACb,SACE,KAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAE,IAAxC;AAAA,cACGA;AADH,IADF;AAKD;AAKD,OAAO,SAASC,8BAAT,QAMQ;AAAA,MALbD,QAKa,SALbA,QAKa;AAAA,MAJbE,KAIa,SAJbA,KAIa;AAEb,MAAMC,OAAO,GAAGR,OAAO,CACrB;AAAA,WAAO;AACLS,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,gBAAgB,EAAEH,KAAK,CAACG,gBAFnB;AAGLC,MAAAA,UAAU,EAAEJ,KAAK,CAACI,UAHb;AAILC,MAAAA,yBAAyB,EAAEL,KAAK,CAACK,yBAJ5B;AAKLC,MAAAA,mBAAmB,EAAEN,KAAK,CAACM,mBALtB;AAMLC,MAAAA,qBAAqB,EAAEP,KAAK,CAACO,qBANxB;AAOLC,MAAAA,uBAAuB,EAAER,KAAK,CAACQ,uBAP1B;AAQLC,MAAAA,SAAS,EAAE;AACTP,QAAAA,OAAO,EAAEF,KAAK,CAACS,SAAN,CAAgBP,OADhB;AAETE,QAAAA,UAAU,EAAEJ,KAAK,CAACS,SAAN,CAAgBL,UAFnB;AAGTM,QAAAA,OAAO,EAAEV,KAAK,CAACS,SAAN,CAAgBC,OAHhB;AAITC,QAAAA,MAAM,EAAEX,KAAK,CAACS,SAAN,CAAgBE;AAJf;AARN,KAAP;AAAA,GADqB,EAgBrB,CACEX,KAAK,CAACG,gBADR,EAEEH,KAAK,CAACI,UAFR,EAGEJ,KAAK,CAACK,yBAHR,EAIEL,KAAK,CAACM,mBAJR,EAKEN,KAAK,CAACO,qBALR,EAMEP,KAAK,CAACQ,uBANR,EAOER,KAAK,CAACS,SAAN,CAAgBP,OAPlB,EAQEF,KAAK,CAACS,SAAN,CAAgBL,UARlB,EASEJ,KAAK,CAACS,SAAN,CAAgBC,OATlB,EAUEV,KAAK,CAACS,SAAN,CAAgBE,MAVlB,CAhBqB,CAAvB;AA6BA,SACE,KAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAEV,OAAxC;AAAA,cACGH;AADH,IADF;AAKD;AAKD,OAAO,SAASc,kCAAT,QAMQ;AAAA,MALbV,OAKa,SALbA,OAKa;AAAA,MAJbJ,QAIa,SAJbA,QAIa;AACb,MAAMG,OAAO,GAAGP,UAAU,CAACC,sBAAD,CAA1B;AACA,SACE,KAAC,sBAAD,CAAwB,QAAxB;AACE,IAAA,KAAK,EAAEM,OAAO,IAAI,IAAX,GAAkB,IAAlB,mCAA6BA,OAA7B;AAAsCC,MAAAA,OAAO,EAAPA;AAAtC,MADT;AAAA,cAEGJ;AAFH,IADF;AAMD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type VirtualizedList from './VirtualizedList.js';\nimport * as React from 'react';\nimport {useMemo, useContext} from 'react';\n\ntype Frame = $ReadOnly<{\n  offset: number,\n  length: number,\n  index: number,\n  inLayout: boolean,\n}>;\n\nexport type ChildListState = $ReadOnly<{\n  first: number,\n  last: number,\n  frames: {[key: number]: Frame},\n}>;\n\n// Data propagated through nested lists (regardless of orientation) that is\n// useful for producing diagnostics for usage errors involving nesting (e.g\n// missing/duplicate keys).\nexport type ListDebugInfo = $ReadOnly<{\n  cellKey: string,\n  listKey: string,\n  parent: ?ListDebugInfo,\n  // We include all ancestors regardless of orientation, so this is not always\n  // identical to the child's orientation.\n  horizontal: boolean,\n}>;\n\ntype Context = $ReadOnly<{\n  cellKey: ?string,\n  getScrollMetrics: () => {\n    contentLength: number,\n    dOffset: number,\n    dt: number,\n    offset: number,\n    timestamp: number,\n    velocity: number,\n    visibleLength: number,\n  },\n  horizontal: ?boolean,\n  getOutermostParentListRef: () => VirtualizedList,\n  getNestedChildState: string => ?ChildListState,\n  registerAsNestedChild: ({\n    cellKey: string,\n    key: string,\n    ref: VirtualizedList,\n    parentDebugInfo: ListDebugInfo,\n  }) => ?ChildListState,\n  unregisterAsNestedChild: ({\n    key: string,\n    state: ChildListState,\n  }) => void,\n  debugInfo: ListDebugInfo,\n}>;\n\nexport const VirtualizedListContext: React.Context<?Context> = React.createContext(\n  null,\n);\n\n/**\n * Resets the context. Intended for use by portal-like components (e.g. Modal).\n */\nexport function VirtualizedListContextResetter({\n  children,\n}: {\n  children: React.Node,\n}): React.Node {\n  return (\n    <VirtualizedListContext.Provider value={null}>\n      {children}\n    </VirtualizedListContext.Provider>\n  );\n}\n\n/**\n * Sets the context with memoization. Intended to be used by `VirtualizedList`.\n */\nexport function VirtualizedListContextProvider({\n  children,\n  value,\n}: {\n  children: React.Node,\n  value: Context,\n}): React.Node {\n  // Avoid setting a newly created context object if the values are identical.\n  const context = useMemo(\n    () => ({\n      cellKey: null,\n      getScrollMetrics: value.getScrollMetrics,\n      horizontal: value.horizontal,\n      getOutermostParentListRef: value.getOutermostParentListRef,\n      getNestedChildState: value.getNestedChildState,\n      registerAsNestedChild: value.registerAsNestedChild,\n      unregisterAsNestedChild: value.unregisterAsNestedChild,\n      debugInfo: {\n        cellKey: value.debugInfo.cellKey,\n        horizontal: value.debugInfo.horizontal,\n        listKey: value.debugInfo.listKey,\n        parent: value.debugInfo.parent,\n      },\n    }),\n    [\n      value.getScrollMetrics,\n      value.horizontal,\n      value.getOutermostParentListRef,\n      value.getNestedChildState,\n      value.registerAsNestedChild,\n      value.unregisterAsNestedChild,\n      value.debugInfo.cellKey,\n      value.debugInfo.horizontal,\n      value.debugInfo.listKey,\n      value.debugInfo.parent,\n    ],\n  );\n  return (\n    <VirtualizedListContext.Provider value={context}>\n      {children}\n    </VirtualizedListContext.Provider>\n  );\n}\n\n/**\n * Sets the `cellKey`. Intended to be used by `VirtualizedList` for each cell.\n */\nexport function VirtualizedListCellContextProvider({\n  cellKey,\n  children,\n}: {\n  cellKey: string,\n  children: React.Node,\n}): React.Node {\n  const context = useContext(VirtualizedListContext);\n  return (\n    <VirtualizedListContext.Provider\n      value={context == null ? null : {...context, cellKey}}>\n      {children}\n    </VirtualizedListContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}