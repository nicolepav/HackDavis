{"ast":null,"code":"'use strict';\n\nimport * as TurboModuleRegistry from \"../../TurboModule/TurboModuleRegistry\";\nvar NativeModule = TurboModuleRegistry.getEnforcing('StatusBarManager');\nvar constants = null;\nvar NativeStatusBarManager = {\n  getConstants: function getConstants() {\n    if (constants == null) {\n      constants = NativeModule.getConstants();\n    }\n\n    return constants;\n  },\n  setColor: function setColor(color, animated) {\n    NativeModule.setColor(color, animated);\n  },\n  setTranslucent: function setTranslucent(translucent) {\n    NativeModule.setTranslucent(translucent);\n  },\n  setStyle: function setStyle(statusBarStyle) {\n    NativeModule.setStyle(statusBarStyle);\n  },\n  setHidden: function setHidden(hidden) {\n    NativeModule.setHidden(hidden);\n  }\n};\nexport default NativeStatusBarManager;","map":{"version":3,"sources":["C:/Users/nicol/Documents/Repos/HackDavis/PantryPickupProject/node_modules/react-native/Libraries/Components/StatusBar/NativeStatusBarManagerAndroid.js"],"names":["TurboModuleRegistry","NativeModule","getEnforcing","constants","NativeStatusBarManager","getConstants","setColor","color","animated","setTranslucent","translucent","setStyle","statusBarStyle","setHidden","hidden"],"mappings":"AAUA;;AAGA,OAAO,KAAKA,mBAAZ;AAmBA,IAAMC,YAAY,GAAGD,mBAAmB,CAACE,YAApB,CAAuC,kBAAvC,CAArB;AACA,IAAIC,SAAS,GAAG,IAAhB;AAEA,IAAMC,sBAAsB,GAAG;AAC7BC,EAAAA,YAD6B,0BAI1B;AACD,QAAIF,SAAS,IAAI,IAAjB,EAAuB;AACrBA,MAAAA,SAAS,GAAGF,YAAY,CAACI,YAAb,EAAZ;AACD;;AACD,WAAOF,SAAP;AACD,GAT4B;AAW7BG,EAAAA,QAX6B,oBAWpBC,KAXoB,EAWLC,QAXK,EAWoB;AAC/CP,IAAAA,YAAY,CAACK,QAAb,CAAsBC,KAAtB,EAA6BC,QAA7B;AACD,GAb4B;AAe7BC,EAAAA,cAf6B,0BAedC,WAfc,EAec;AACzCT,IAAAA,YAAY,CAACQ,cAAb,CAA4BC,WAA5B;AACD,GAjB4B;AAwB7BC,EAAAA,QAxB6B,oBAwBpBC,cAxBoB,EAwBY;AACvCX,IAAAA,YAAY,CAACU,QAAb,CAAsBC,cAAtB;AACD,GA1B4B;AA4B7BC,EAAAA,SA5B6B,qBA4BnBC,MA5BmB,EA4BI;AAC/Bb,IAAAA,YAAY,CAACY,SAAb,CAAuBC,MAAvB;AACD;AA9B4B,CAA/B;AAiCA,eAAeV,sBAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../../TurboModule/RCTExport';\nimport * as TurboModuleRegistry from '../../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    +HEIGHT: number,\n    +DEFAULT_BACKGROUND_COLOR: number,\n  |};\n  +setColor: (color: number, animated: boolean) => void;\n  +setTranslucent: (translucent: boolean) => void;\n\n  /**\n   *  - statusBarStyles can be:\n   *    - 'default'\n   *    - 'dark-content'\n   */\n  +setStyle: (statusBarStyle?: ?string) => void;\n  +setHidden: (hidden: boolean) => void;\n}\n\nconst NativeModule = TurboModuleRegistry.getEnforcing<Spec>('StatusBarManager');\nlet constants = null;\n\nconst NativeStatusBarManager = {\n  getConstants(): {|\n    +HEIGHT: number,\n    +DEFAULT_BACKGROUND_COLOR?: number,\n  |} {\n    if (constants == null) {\n      constants = NativeModule.getConstants();\n    }\n    return constants;\n  },\n\n  setColor(color: number, animated: boolean): void {\n    NativeModule.setColor(color, animated);\n  },\n\n  setTranslucent(translucent: boolean): void {\n    NativeModule.setTranslucent(translucent);\n  },\n\n  /**\n   *  - statusBarStyles can be:\n   *    - 'default'\n   *    - 'dark-content'\n   */\n  setStyle(statusBarStyle?: ?string): void {\n    NativeModule.setStyle(statusBarStyle);\n  },\n\n  setHidden(hidden: boolean): void {\n    NativeModule.setHidden(hidden);\n  },\n};\n\nexport default NativeStatusBarManager;\n"]},"metadata":{},"sourceType":"module"}