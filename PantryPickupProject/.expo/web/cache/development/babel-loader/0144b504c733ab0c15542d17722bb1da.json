{"ast":null,"code":"'use strict';\n\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"forwardedRef\", \"selectionColor\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport TextInjection from \"./TextInjection\";\nimport { NativeText, NativeVirtualText } from \"./TextNativeComponent\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar DeprecatedTextPropTypes = require(\"../DeprecatedPropTypes/DeprecatedTextPropTypes\");\n\nvar React = require('react');\n\nvar TextAncestor = require(\"./TextAncestor\");\n\nvar Touchable = require(\"../Components/Touchable/Touchable\");\n\nvar nullthrows = require('nullthrows');\n\nvar processColor = require(\"../StyleSheet/processColor\");\n\nvar PRESS_RECT_OFFSET = {\n  top: 20,\n  left: 20,\n  right: 20,\n  bottom: 30\n};\n\nvar TouchableText = function (_React$Component) {\n  _inherits(TouchableText, _React$Component);\n\n  var _super = _createSuper(TouchableText);\n\n  function TouchableText() {\n    var _this;\n\n    _classCallCheck(this, TouchableText);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = _objectSpread(_objectSpread({}, Touchable.Mixin.touchableGetInitialState()), {}, {\n      isHighlighted: false,\n      createResponderHandlers: _this._createResponseHandlers.bind(_assertThisInitialized(_this)),\n      responseHandlers: null\n    });\n    return _this;\n  }\n\n  _createClass(TouchableText, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          forwardedRef = _this$props.forwardedRef,\n          selectionColor = _this$props.selectionColor,\n          props = _objectWithoutProperties(_this$props, _excluded);\n\n      if (isTouchable(this.props)) {\n        props = _objectSpread(_objectSpread(_objectSpread({}, props), this.state.responseHandlers), {}, {\n          isHighlighted: this.state.isHighlighted\n        });\n      }\n\n      if (selectionColor != null) {\n        props = _objectSpread(_objectSpread({}, props), {}, {\n          selectionColor: processColor(selectionColor)\n        });\n      }\n\n      if (__DEV__) {\n        if (Touchable.TOUCH_TARGET_DEBUG && props.onPress != null) {\n          props = _objectSpread(_objectSpread({}, props), {}, {\n            style: [props.style, {\n              color: 'magenta'\n            }]\n          });\n        }\n      }\n\n      return _jsx(TextAncestor.Consumer, {\n        children: function children(hasTextAncestor) {\n          return hasTextAncestor ? _jsx(NativeVirtualText, _objectSpread(_objectSpread({}, props), {}, {\n            onClick: props.onPress,\n            ref: forwardedRef\n          })) : _jsx(TextAncestor.Provider, {\n            value: true,\n            children: _jsx(NativeText, _objectSpread(_objectSpread({}, props), {}, {\n              ref: forwardedRef\n            }))\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_createResponseHandlers\",\n    value: function _createResponseHandlers() {\n      var _this2 = this;\n\n      return {\n        onStartShouldSetResponder: function onStartShouldSetResponder() {\n          var onStartShouldSetResponder = _this2.props.onStartShouldSetResponder;\n          var shouldSetResponder = (onStartShouldSetResponder == null ? false : onStartShouldSetResponder()) || isTouchable(_this2.props);\n\n          if (shouldSetResponder) {\n            _this2._attachTouchHandlers();\n          }\n\n          return shouldSetResponder;\n        },\n        onResponderGrant: function onResponderGrant(event) {\n          nullthrows(_this2.touchableHandleResponderGrant)(event);\n\n          if (_this2.props.onResponderGrant != null) {\n            _this2.props.onResponderGrant.call(_this2, event);\n          }\n        },\n        onResponderMove: function onResponderMove(event) {\n          nullthrows(_this2.touchableHandleResponderMove)(event);\n\n          if (_this2.props.onResponderMove != null) {\n            _this2.props.onResponderMove.call(_this2, event);\n          }\n        },\n        onResponderRelease: function onResponderRelease(event) {\n          nullthrows(_this2.touchableHandleResponderRelease)(event);\n\n          if (_this2.props.onResponderRelease != null) {\n            _this2.props.onResponderRelease.call(_this2, event);\n          }\n        },\n        onResponderTerminate: function onResponderTerminate(event) {\n          nullthrows(_this2.touchableHandleResponderTerminate)(event);\n\n          if (_this2.props.onResponderTerminate != null) {\n            _this2.props.onResponderTerminate.call(_this2, event);\n          }\n        },\n        onResponderTerminationRequest: function onResponderTerminationRequest() {\n          var onResponderTerminationRequest = _this2.props.onResponderTerminationRequest;\n\n          if (!nullthrows(_this2.touchableHandleResponderTerminationRequest)()) {\n            return false;\n          }\n\n          if (onResponderTerminationRequest == null) {\n            return true;\n          }\n\n          return onResponderTerminationRequest();\n        }\n      };\n    }\n  }, {\n    key: \"_attachTouchHandlers\",\n    value: function _attachTouchHandlers() {\n      var _this3 = this;\n\n      if (this.touchableGetPressRectOffset != null) {\n        return;\n      }\n\n      for (var key in Touchable.Mixin) {\n        if (typeof Touchable.Mixin[key] === 'function') {\n          this[key] = Touchable.Mixin[key].bind(this);\n        }\n      }\n\n      this.touchableHandleActivePressIn = function () {\n        if (!_this3.props.suppressHighlighting && isTouchable(_this3.props)) {\n          _this3.setState({\n            isHighlighted: true\n          });\n        }\n      };\n\n      this.touchableHandleActivePressOut = function () {\n        if (!_this3.props.suppressHighlighting && isTouchable(_this3.props)) {\n          _this3.setState({\n            isHighlighted: false\n          });\n        }\n      };\n\n      this.touchableHandlePress = function (event) {\n        if (_this3.props.onPress != null) {\n          _this3.props.onPress(event);\n        }\n      };\n\n      this.touchableHandleLongPress = function (event) {\n        if (_this3.props.onLongPress != null) {\n          _this3.props.onLongPress(event);\n        }\n      };\n\n      this.touchableGetPressRectOffset = function () {\n        return _this3.props.pressRetentionOffset == null ? PRESS_RECT_OFFSET : _this3.props.pressRetentionOffset;\n      };\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      return prevState.responseHandlers == null && isTouchable(nextProps) ? {\n        responseHandlers: prevState.createResponderHandlers()\n      } : null;\n    }\n  }]);\n\n  return TouchableText;\n}(React.Component);\n\nTouchableText.defaultProps = {\n  accessible: true,\n  allowFontScaling: true,\n  ellipsizeMode: 'tail'\n};\n\nvar isTouchable = function isTouchable(props) {\n  return props.onPress != null || props.onLongPress != null || props.onStartShouldSetResponder != null;\n};\n\nvar Text = React.forwardRef(function (props, forwardedRef) {\n  return _jsx(TouchableText, _objectSpread(_objectSpread({}, props), {}, {\n    forwardedRef: forwardedRef\n  }));\n});\nText.displayName = 'Text';\nText.propTypes = DeprecatedTextPropTypes;\nvar TextToExport = TextInjection.unstable_Text == null ? Text : TextInjection.unstable_Text;\nmodule.exports = TextToExport;","map":{"version":3,"sources":["C:/Users/nicol/Documents/Repos/HackDavis/PantryPickupProject/node_modules/react-native/Libraries/Text/Text.js"],"names":["TextInjection","NativeText","NativeVirtualText","DeprecatedTextPropTypes","require","React","TextAncestor","Touchable","nullthrows","processColor","PRESS_RECT_OFFSET","top","left","right","bottom","TouchableText","state","Mixin","touchableGetInitialState","isHighlighted","createResponderHandlers","_createResponseHandlers","bind","responseHandlers","props","forwardedRef","selectionColor","isTouchable","__DEV__","TOUCH_TARGET_DEBUG","onPress","style","color","hasTextAncestor","onStartShouldSetResponder","shouldSetResponder","_attachTouchHandlers","onResponderGrant","event","touchableHandleResponderGrant","call","onResponderMove","touchableHandleResponderMove","onResponderRelease","touchableHandleResponderRelease","onResponderTerminate","touchableHandleResponderTerminate","onResponderTerminationRequest","touchableHandleResponderTerminationRequest","touchableGetPressRectOffset","key","touchableHandleActivePressIn","suppressHighlighting","setState","touchableHandleActivePressOut","touchableHandlePress","touchableHandleLongPress","onLongPress","pressRetentionOffset","nextProps","prevState","Component","defaultProps","accessible","allowFontScaling","ellipsizeMode","Text","forwardRef","displayName","propTypes","TextToExport","unstable_Text","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport TextInjection from './TextInjection';\nimport {NativeText, NativeVirtualText} from './TextNativeComponent';\n\nconst DeprecatedTextPropTypes = require('../DeprecatedPropTypes/DeprecatedTextPropTypes');\nconst React = require('react');\nconst TextAncestor = require('./TextAncestor');\nconst Touchable = require('../Components/Touchable/Touchable');\n\nconst nullthrows = require('nullthrows');\nconst processColor = require('../StyleSheet/processColor');\n\nimport type {PressEvent} from '../Types/CoreEventTypes';\nimport type {PressRetentionOffset, TextProps} from './TextProps';\n\ntype ResponseHandlers = $ReadOnly<{|\n  onStartShouldSetResponder: () => boolean,\n  onResponderGrant: (event: PressEvent) => void,\n  onResponderMove: (event: PressEvent) => void,\n  onResponderRelease: (event: PressEvent) => void,\n  onResponderTerminate: (event: PressEvent) => void,\n  onResponderTerminationRequest: () => boolean,\n|}>;\n\ntype Props = $ReadOnly<{|\n  ...TextProps,\n  forwardedRef: ?React.Ref<typeof NativeText | typeof NativeVirtualText>,\n|}>;\n\ntype State = {|\n  touchable: {|\n    touchState: ?string,\n    responderID: ?number,\n  |},\n  isHighlighted: boolean,\n  createResponderHandlers: () => ResponseHandlers,\n  responseHandlers: ?ResponseHandlers,\n|};\n\nconst PRESS_RECT_OFFSET = {top: 20, left: 20, right: 20, bottom: 30};\n\n/**\n * A React component for displaying text.\n *\n * See https://reactnative.dev/docs/text.html\n */\nclass TouchableText extends React.Component<Props, State> {\n  static defaultProps = {\n    accessible: true,\n    allowFontScaling: true,\n    ellipsizeMode: 'tail',\n  };\n\n  touchableGetPressRectOffset: ?() => PressRetentionOffset;\n  touchableHandleActivePressIn: ?() => void;\n  touchableHandleActivePressOut: ?() => void;\n  touchableHandleLongPress: ?(event: PressEvent) => void;\n  touchableHandlePress: ?(event: PressEvent) => void;\n  touchableHandleResponderGrant: ?(event: PressEvent) => void;\n  touchableHandleResponderMove: ?(event: PressEvent) => void;\n  touchableHandleResponderRelease: ?(event: PressEvent) => void;\n  touchableHandleResponderTerminate: ?(event: PressEvent) => void;\n  touchableHandleResponderTerminationRequest: ?() => boolean;\n\n  state = {\n    ...Touchable.Mixin.touchableGetInitialState(),\n    isHighlighted: false,\n    createResponderHandlers: this._createResponseHandlers.bind(this),\n    responseHandlers: null,\n  };\n\n  static getDerivedStateFromProps(\n    nextProps: Props,\n    prevState: State,\n  ): $Shape<State> | null {\n    return prevState.responseHandlers == null && isTouchable(nextProps)\n      ? {\n          responseHandlers: prevState.createResponderHandlers(),\n        }\n      : null;\n  }\n\n  render(): React.Node {\n    let {forwardedRef, selectionColor, ...props} = this.props;\n    if (isTouchable(this.props)) {\n      props = {\n        ...props,\n        ...this.state.responseHandlers,\n        isHighlighted: this.state.isHighlighted,\n      };\n    }\n    if (selectionColor != null) {\n      props = {\n        ...props,\n        selectionColor: processColor(selectionColor),\n      };\n    }\n    if (__DEV__) {\n      if (Touchable.TOUCH_TARGET_DEBUG && props.onPress != null) {\n        props = {\n          ...props,\n          style: [props.style, {color: 'magenta'}],\n        };\n      }\n    }\n    return (\n      <TextAncestor.Consumer>\n        {hasTextAncestor =>\n          hasTextAncestor ? (\n            // $FlowFixMe[prop-missing] For the `onClick` workaround.\n            <NativeVirtualText\n              {...props}\n              // This is used on Android to call a nested Text component's press handler from the context menu.\n              // TODO T75145059 Clean this up once Text is migrated off of Touchable\n              onClick={props.onPress}\n              ref={forwardedRef}\n            />\n          ) : (\n            <TextAncestor.Provider value={true}>\n              <NativeText {...props} ref={forwardedRef} />\n            </TextAncestor.Provider>\n          )\n        }\n      </TextAncestor.Consumer>\n    );\n  }\n\n  _createResponseHandlers(): ResponseHandlers {\n    return {\n      onStartShouldSetResponder: (): boolean => {\n        const {onStartShouldSetResponder} = this.props;\n        const shouldSetResponder =\n          (onStartShouldSetResponder == null\n            ? false\n            : onStartShouldSetResponder()) || isTouchable(this.props);\n\n        if (shouldSetResponder) {\n          this._attachTouchHandlers();\n        }\n        return shouldSetResponder;\n      },\n      onResponderGrant: (event: PressEvent): void => {\n        nullthrows(this.touchableHandleResponderGrant)(event);\n        if (this.props.onResponderGrant != null) {\n          this.props.onResponderGrant.call(this, event);\n        }\n      },\n      onResponderMove: (event: PressEvent): void => {\n        nullthrows(this.touchableHandleResponderMove)(event);\n        if (this.props.onResponderMove != null) {\n          this.props.onResponderMove.call(this, event);\n        }\n      },\n      onResponderRelease: (event: PressEvent): void => {\n        nullthrows(this.touchableHandleResponderRelease)(event);\n        if (this.props.onResponderRelease != null) {\n          this.props.onResponderRelease.call(this, event);\n        }\n      },\n      onResponderTerminate: (event: PressEvent): void => {\n        nullthrows(this.touchableHandleResponderTerminate)(event);\n        if (this.props.onResponderTerminate != null) {\n          this.props.onResponderTerminate.call(this, event);\n        }\n      },\n      onResponderTerminationRequest: (): boolean => {\n        const {onResponderTerminationRequest} = this.props;\n        if (!nullthrows(this.touchableHandleResponderTerminationRequest)()) {\n          return false;\n        }\n        if (onResponderTerminationRequest == null) {\n          return true;\n        }\n        return onResponderTerminationRequest();\n      },\n    };\n  }\n\n  /**\n   * Lazily attaches Touchable.Mixin handlers.\n   */\n  _attachTouchHandlers(): void {\n    if (this.touchableGetPressRectOffset != null) {\n      return;\n    }\n    for (const key in Touchable.Mixin) {\n      if (typeof Touchable.Mixin[key] === 'function') {\n        (this: any)[key] = Touchable.Mixin[key].bind(this);\n      }\n    }\n    this.touchableHandleActivePressIn = (): void => {\n      if (!this.props.suppressHighlighting && isTouchable(this.props)) {\n        this.setState({isHighlighted: true});\n      }\n    };\n    this.touchableHandleActivePressOut = (): void => {\n      if (!this.props.suppressHighlighting && isTouchable(this.props)) {\n        this.setState({isHighlighted: false});\n      }\n    };\n    this.touchableHandlePress = (event: PressEvent): void => {\n      if (this.props.onPress != null) {\n        this.props.onPress(event);\n      }\n    };\n    this.touchableHandleLongPress = (event: PressEvent): void => {\n      if (this.props.onLongPress != null) {\n        this.props.onLongPress(event);\n      }\n    };\n    this.touchableGetPressRectOffset = (): PressRetentionOffset =>\n      this.props.pressRetentionOffset == null\n        ? PRESS_RECT_OFFSET\n        : this.props.pressRetentionOffset;\n  }\n}\n\nconst isTouchable = (props: Props): boolean =>\n  props.onPress != null ||\n  props.onLongPress != null ||\n  props.onStartShouldSetResponder != null;\n\nconst Text: React.AbstractComponent<\n  TextProps,\n  React.ElementRef<typeof NativeText | typeof NativeVirtualText>,\n> = React.forwardRef(\n  (\n    props: TextProps,\n    forwardedRef: ?React.Ref<typeof NativeText | typeof NativeVirtualText>,\n  ) => {\n    return <TouchableText {...props} forwardedRef={forwardedRef} />;\n  },\n);\nText.displayName = 'Text';\n\n// TODO: Deprecate this.\n/* $FlowFixMe(>=0.89.0 site=react_native_fb) This comment suppresses an error\n * found when Flow v0.89 was deployed. To see the error, delete this comment\n * and run Flow. */\nText.propTypes = DeprecatedTextPropTypes;\n\nconst TextToExport: typeof Text &\n  $ReadOnly<{|\n    propTypes: typeof DeprecatedTextPropTypes,\n  |}> =\n  // $FlowFixMe[incompatible-type] - No good way to type a React.AbstractComponent with statics.\n  TextInjection.unstable_Text == null ? Text : TextInjection.unstable_Text;\n\nmodule.exports = TextToExport;\n"]},"metadata":{},"sourceType":"module"}