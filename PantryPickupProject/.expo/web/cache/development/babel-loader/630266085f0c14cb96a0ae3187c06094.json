{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport ReactNativeViewAttributes from \"../Components/View/ReactNativeViewAttributes\";\nimport UIManager from \"../ReactNative/UIManager\";\nimport createReactNativeComponentClass from \"../Renderer/shims/createReactNativeComponentClass\";\nexport var NativeText = createReactNativeComponentClass('RCTText', function () {\n  return {\n    validAttributes: _objectSpread(_objectSpread({}, ReactNativeViewAttributes.UIView), {}, {\n      isHighlighted: true,\n      numberOfLines: true,\n      ellipsizeMode: true,\n      allowFontScaling: true,\n      maxFontSizeMultiplier: true,\n      disabled: true,\n      selectable: true,\n      selectionColor: true,\n      adjustsFontSizeToFit: true,\n      minimumFontScale: true,\n      textBreakStrategy: true,\n      onTextLayout: true,\n      onInlineViewLayout: true,\n      dataDetectorType: true\n    }),\n    directEventTypes: {\n      topTextLayout: {\n        registrationName: 'onTextLayout'\n      },\n      topInlineViewLayout: {\n        registrationName: 'onInlineViewLayout'\n      }\n    },\n    uiViewClassName: 'RCTText'\n  };\n});\nexport var NativeVirtualText = UIManager.getViewManagerConfig('RCTVirtualText') == null ? NativeText : createReactNativeComponentClass('RCTVirtualText', function () {\n  return {\n    validAttributes: _objectSpread(_objectSpread({}, ReactNativeViewAttributes.UIView), {}, {\n      isHighlighted: true,\n      maxFontSizeMultiplier: true\n    }),\n    uiViewClassName: 'RCTVirtualText'\n  };\n});","map":{"version":3,"sources":["C:/Users/nicol/Documents/Repos/HackDavis/PantryPickupProject/node_modules/react-native/Libraries/Text/TextNativeComponent.js"],"names":["ReactNativeViewAttributes","UIManager","createReactNativeComponentClass","NativeText","validAttributes","UIView","isHighlighted","numberOfLines","ellipsizeMode","allowFontScaling","maxFontSizeMultiplier","disabled","selectable","selectionColor","adjustsFontSizeToFit","minimumFontScale","textBreakStrategy","onTextLayout","onInlineViewLayout","dataDetectorType","directEventTypes","topTextLayout","registrationName","topInlineViewLayout","uiViewClassName","NativeVirtualText","getViewManagerConfig"],"mappings":"AAUA;;;;;;;;AAEA,OAAOA,yBAAP;AACA,OAAOC,SAAP;AAEA,OAAOC,+BAAP;AAUA,OAAO,IAAMC,UAA0C,GAAID,+BAA+B,CACxF,SADwF,EAExF;AAAA,SAAO;AACLE,IAAAA,eAAe,kCACVJ,yBAAyB,CAACK,MADhB;AAEbC,MAAAA,aAAa,EAAE,IAFF;AAGbC,MAAAA,aAAa,EAAE,IAHF;AAIbC,MAAAA,aAAa,EAAE,IAJF;AAKbC,MAAAA,gBAAgB,EAAE,IALL;AAMbC,MAAAA,qBAAqB,EAAE,IANV;AAObC,MAAAA,QAAQ,EAAE,IAPG;AAQbC,MAAAA,UAAU,EAAE,IARC;AASbC,MAAAA,cAAc,EAAE,IATH;AAUbC,MAAAA,oBAAoB,EAAE,IAVT;AAWbC,MAAAA,gBAAgB,EAAE,IAXL;AAYbC,MAAAA,iBAAiB,EAAE,IAZN;AAabC,MAAAA,YAAY,EAAE,IAbD;AAcbC,MAAAA,kBAAkB,EAAE,IAdP;AAebC,MAAAA,gBAAgB,EAAE;AAfL,MADV;AAkBLC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,aAAa,EAAE;AACbC,QAAAA,gBAAgB,EAAE;AADL,OADC;AAIhBC,MAAAA,mBAAmB,EAAE;AACnBD,QAAAA,gBAAgB,EAAE;AADC;AAJL,KAlBb;AA0BLE,IAAAA,eAAe,EAAE;AA1BZ,GAAP;AAAA,CAFwF,CAAnF;AAgCP,OAAO,IAAMC,iBAAiD,GAC5DxB,SAAS,CAACyB,oBAAV,CAA+B,gBAA/B,KAAoD,IAApD,GACIvB,UADJ,GAEKD,+BAA+B,CAAC,gBAAD,EAAmB;AAAA,SAAO;AACxDE,IAAAA,eAAe,kCACVJ,yBAAyB,CAACK,MADhB;AAEbC,MAAAA,aAAa,EAAE,IAFF;AAGbI,MAAAA,qBAAqB,EAAE;AAHV,MADyC;AAMxDc,IAAAA,eAAe,EAAE;AANuC,GAAP;AAAA,CAAnB,CAH/B","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport ReactNativeViewAttributes from '../Components/View/ReactNativeViewAttributes';\nimport UIManager from '../ReactNative/UIManager';\nimport {type HostComponent} from '../Renderer/shims/ReactNativeTypes';\nimport createReactNativeComponentClass from '../Renderer/shims/createReactNativeComponentClass';\nimport {type ProcessedColorValue} from '../StyleSheet/processColor';\nimport {type TextProps} from './TextProps';\n\ntype NativeTextProps = $ReadOnly<{\n  ...TextProps,\n  isHighlighted?: ?boolean,\n  selectionColor?: ?ProcessedColorValue,\n}>;\n\nexport const NativeText: HostComponent<NativeTextProps> = (createReactNativeComponentClass(\n  'RCTText',\n  () => ({\n    validAttributes: {\n      ...ReactNativeViewAttributes.UIView,\n      isHighlighted: true,\n      numberOfLines: true,\n      ellipsizeMode: true,\n      allowFontScaling: true,\n      maxFontSizeMultiplier: true,\n      disabled: true,\n      selectable: true,\n      selectionColor: true,\n      adjustsFontSizeToFit: true,\n      minimumFontScale: true,\n      textBreakStrategy: true,\n      onTextLayout: true,\n      onInlineViewLayout: true,\n      dataDetectorType: true,\n    },\n    directEventTypes: {\n      topTextLayout: {\n        registrationName: 'onTextLayout',\n      },\n      topInlineViewLayout: {\n        registrationName: 'onInlineViewLayout',\n      },\n    },\n    uiViewClassName: 'RCTText',\n  }),\n): any);\n\nexport const NativeVirtualText: HostComponent<NativeTextProps> =\n  UIManager.getViewManagerConfig('RCTVirtualText') == null\n    ? NativeText\n    : (createReactNativeComponentClass('RCTVirtualText', () => ({\n        validAttributes: {\n          ...ReactNativeViewAttributes.UIView,\n          isHighlighted: true,\n          maxFontSizeMultiplier: true,\n        },\n        uiViewClassName: 'RCTVirtualText',\n      })): any);\n"]},"metadata":{},"sourceType":"module"}