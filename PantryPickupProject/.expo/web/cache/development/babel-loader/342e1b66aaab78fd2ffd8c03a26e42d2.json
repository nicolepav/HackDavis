{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nexport var vw = function vw(number) {\n  return Dimensions.get('window').width * (number / 100);\n};\nexport var vh = function vh(number) {\n  return Dimensions.get('window').height * (number / 100);\n};\nexport var vmin = function vmin(number) {\n  return Math.min(Dimensions.get('window').width * (number / 100), Dimensions.get('window').height * (number / 100));\n};\nexport var vmax = function vmax(number) {\n  return Math.max(Dimensions.get('window').width * (number / 100), Dimensions.get('window').height * (number / 100));\n};","map":{"version":3,"sources":["C:/Users/nicol/Documents/Repos/HackDavis/PantryPickupProject/node_modules/react-native-expo-viewport-units/index.js"],"names":["vw","number","Dimensions","get","width","vh","height","vmin","Math","min","vmax","max"],"mappings":";AACA,OAAO,IAAMA,EAAE,GAAG,SAALA,EAAK,CAAAC,MAAM;AAAA,SAAIC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,IAAkCH,MAAM,GAAG,GAA3C,CAAJ;AAAA,CAAjB;AACP,OAAO,IAAMI,EAAE,GAAG,SAALA,EAAK,CAAAJ,MAAM;AAAA,SAAIC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAAzB,IAAmCL,MAAM,GAAG,GAA5C,CAAJ;AAAA,CAAjB;AACP,OAAO,IAAMM,IAAI,GAAG,SAAPA,IAAO,CAAAN,MAAM;AAAA,SAAIO,IAAI,CAACC,GAAL,CAASP,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,IAAkCH,MAAM,GAAG,GAA3C,CAAT,EAA0DC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAAzB,IAAmCL,MAAM,GAAG,GAA5C,CAA1D,CAAJ;AAAA,CAAnB;AACP,OAAO,IAAMS,IAAI,GAAG,SAAPA,IAAO,CAAAT,MAAM;AAAA,SAAIO,IAAI,CAACG,GAAL,CAAST,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,IAAkCH,MAAM,GAAG,GAA3C,CAAT,EAA0DC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAAzB,IAAmCL,MAAM,GAAG,GAA5C,CAA1D,CAAJ;AAAA,CAAnB","sourcesContent":["import { Dimensions } from 'react-native';\nexport const vw = number => Dimensions.get('window').width * (number / 100);\nexport const vh = number => Dimensions.get('window').height * (number / 100);\nexport const vmin = number => Math.min(Dimensions.get('window').width * (number / 100), Dimensions.get('window').height * (number / 100));\nexport const vmax = number => Math.max(Dimensions.get('window').width * (number / 100), Dimensions.get('window').height * (number / 100));\n"]},"metadata":{},"sourceType":"module"}