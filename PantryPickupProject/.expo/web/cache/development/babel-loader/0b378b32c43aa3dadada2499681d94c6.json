{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Batchinator = require(\"../Interaction/Batchinator\");\n\nvar FillRateHelper = require(\"./FillRateHelper\");\n\nvar ReactNative = require(\"../Renderer/shims/ReactNative\");\n\nvar RefreshControl = require(\"../Components/RefreshControl/RefreshControl\");\n\nvar ScrollView = require(\"../Components/ScrollView/ScrollView\");\n\nvar StyleSheet = require(\"../StyleSheet/StyleSheet\");\n\nvar View = require(\"../Components/View/View\");\n\nvar ViewabilityHelper = require(\"./ViewabilityHelper\");\n\nvar flattenStyle = require(\"../StyleSheet/flattenStyle\");\n\nvar infoLog = require(\"../Utilities/infoLog\");\n\nvar invariant = require('invariant');\n\nvar _require = require(\"./VirtualizeUtils\"),\n    computeWindowedRenderLimits = _require.computeWindowedRenderLimits;\n\nimport * as React from 'react';\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from \"./VirtualizedListContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\n\nvar VirtualizedList = function (_React$PureComponent) {\n  _inherits(VirtualizedList, _React$PureComponent);\n\n  var _super = _createSuper(VirtualizedList);\n\n  function VirtualizedList(_props) {\n    var _this;\n\n    _classCallCheck(this, VirtualizedList);\n\n    _this = _super.call(this, _props);\n\n    _this._getScrollMetrics = function () {\n      return _this._scrollMetrics;\n    };\n\n    _this._getOutermostParentListRef = function () {\n      if (_this._isNestedWithSameOrientation()) {\n        return _this.context.getOutermostParentListRef();\n      } else {\n        return _assertThisInitialized(_this);\n      }\n    };\n\n    _this._getNestedChildState = function (key) {\n      var existingChildData = _this._nestedChildLists.get(key);\n\n      return existingChildData && existingChildData.state;\n    };\n\n    _this._registerAsNestedChild = function (childList) {\n      var childListsInCell = _this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n      childListsInCell.add(childList.key);\n\n      _this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n      var existingChildData = _this._nestedChildLists.get(childList.key);\n\n      if (existingChildData && existingChildData.ref !== null) {\n        console.error('A VirtualizedList contains a cell which itself contains ' + 'more than one VirtualizedList of the same orientation as the parent ' + 'list. You must pass a unique listKey prop to each sibling list.\\n\\n' + describeNestedLists(_objectSpread(_objectSpread({}, childList), {}, {\n          horizontal: !!childList.ref.props.horizontal\n        })));\n      }\n\n      _this._nestedChildLists.set(childList.key, {\n        ref: childList.ref,\n        state: null\n      });\n\n      if (_this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n\n    _this._unregisterAsNestedChild = function (childList) {\n      _this._nestedChildLists.set(childList.key, {\n        ref: null,\n        state: childList.state\n      });\n    };\n\n    _this._onUpdateSeparators = function (keys, newProps) {\n      keys.forEach(function (key) {\n        var ref = key != null && _this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n\n    _this._averageCellLength = 0;\n    _this._cellKeysToChildListKeys = new Map();\n    _this._cellRefs = {};\n    _this._frames = {};\n    _this._footerLength = 0;\n    _this._hasDoneInitialScroll = false;\n    _this._hasInteracted = false;\n    _this._hasMore = false;\n    _this._hasWarned = {};\n    _this._headerLength = 0;\n    _this._hiPriInProgress = false;\n    _this._highestMeasuredFrameIndex = 0;\n    _this._indicesToKeys = new Map();\n    _this._nestedChildLists = new Map();\n    _this._offsetFromParentVirtualizedList = 0;\n    _this._prevParentOffset = 0;\n    _this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0\n    };\n    _this._scrollRef = null;\n    _this._sentEndForContentLength = 0;\n    _this._totalCellLength = 0;\n    _this._totalCellsMeasured = 0;\n    _this._viewabilityTuples = [];\n\n    _this._captureScrollRef = function (ref) {\n      _this._scrollRef = ref;\n    };\n\n    _this._defaultRenderScrollComponent = function (props) {\n      var onRefresh = props.onRefresh;\n\n      if (_this._isNestedWithSameOrientation()) {\n        return _jsx(View, _objectSpread({}, props));\n      } else if (onRefresh) {\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify(props.refreshing) + '`');\n        return _jsx(ScrollView, _objectSpread(_objectSpread({}, props), {}, {\n          refreshControl: props.refreshControl == null ? _jsx(RefreshControl, {\n            refreshing: props.refreshing,\n            onRefresh: onRefresh,\n            progressViewOffset: props.progressViewOffset\n          }) : props.refreshControl\n        }));\n      } else {\n        return _jsx(ScrollView, _objectSpread({}, props));\n      }\n    };\n\n    _this._onCellUnmount = function (cellKey) {\n      var curr = _this._frames[cellKey];\n\n      if (curr) {\n        _this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n\n    _this._onLayout = function (e) {\n      if (_this._isNestedWithSameOrientation()) {\n        _this.measureLayoutRelativeToContainingList();\n      } else {\n        _this._scrollMetrics.visibleLength = _this._selectLength(e.nativeEvent.layout);\n      }\n\n      _this.props.onLayout && _this.props.onLayout(e);\n\n      _this._scheduleCellsToRenderUpdate();\n\n      _this._maybeCallOnEndReached();\n    };\n\n    _this._onLayoutEmpty = function (e) {\n      _this.props.onLayout && _this.props.onLayout(e);\n    };\n\n    _this._onLayoutFooter = function (e) {\n      _this._triggerRemeasureForChildListsInCell(_this._getFooterCellKey());\n\n      _this._footerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n\n    _this._onLayoutHeader = function (e) {\n      _this._headerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n\n    _this._onContentSizeChange = function (width, height) {\n      if (width > 0 && height > 0 && _this.props.initialScrollIndex != null && _this.props.initialScrollIndex > 0 && !_this._hasDoneInitialScroll) {\n        if (_this.props.contentOffset == null) {\n          _this.scrollToIndex({\n            animated: false,\n            index: _this.props.initialScrollIndex\n          });\n        }\n\n        _this._hasDoneInitialScroll = true;\n      }\n\n      if (_this.props.onContentSizeChange) {\n        _this.props.onContentSizeChange(width, height);\n      }\n\n      _this._scrollMetrics.contentLength = _this._selectLength({\n        height: height,\n        width: width\n      });\n\n      _this._scheduleCellsToRenderUpdate();\n\n      _this._maybeCallOnEndReached();\n    };\n\n    _this._convertParentScrollMetrics = function (metrics) {\n      var offset = metrics.offset - _this._offsetFromParentVirtualizedList;\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - _this._scrollMetrics.offset;\n      var contentLength = _this._scrollMetrics.contentLength;\n      return {\n        visibleLength: visibleLength,\n        contentLength: contentLength,\n        offset: offset,\n        dOffset: dOffset\n      };\n    };\n\n    _this._onScroll = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScroll(e);\n      });\n\n      if (_this.props.onScroll) {\n        _this.props.onScroll(e);\n      }\n\n      var timestamp = e.timeStamp;\n\n      var visibleLength = _this._selectLength(e.nativeEvent.layoutMeasurement);\n\n      var contentLength = _this._selectLength(e.nativeEvent.contentSize);\n\n      var offset = _this._selectOffset(e.nativeEvent.contentOffset);\n\n      var dOffset = offset - _this._scrollMetrics.offset;\n\n      if (_this._isNestedWithSameOrientation()) {\n        if (_this._scrollMetrics.contentLength === 0) {\n          return;\n        }\n\n        var _this$_convertParentS = _this._convertParentScrollMetrics({\n          visibleLength: visibleLength,\n          offset: offset\n        });\n\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n\n      var dt = _this._scrollMetrics.timestamp ? Math.max(1, timestamp - _this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n\n      if (dt > 500 && _this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt: dt,\n          prevDt: _this._scrollMetrics.dt,\n          contentLength: contentLength\n        });\n        _this._hasWarned.perf = true;\n      }\n\n      _this._scrollMetrics = {\n        contentLength: contentLength,\n        dt: dt,\n        dOffset: dOffset,\n        offset: offset,\n        timestamp: timestamp,\n        velocity: velocity,\n        visibleLength: visibleLength\n      };\n\n      _this._updateViewableItems(_this.props.data);\n\n      if (!_this.props) {\n        return;\n      }\n\n      _this._maybeCallOnEndReached();\n\n      if (velocity !== 0) {\n        _this._fillRateHelper.activate();\n      }\n\n      _this._computeBlankness();\n\n      _this._scheduleCellsToRenderUpdate();\n    };\n\n    _this._onScrollBeginDrag = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScrollBeginDrag(e);\n      });\n\n      _this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n\n      _this._hasInteracted = true;\n      _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e);\n    };\n\n    _this._onScrollEndDrag = function (e) {\n      var velocity = e.nativeEvent.velocity;\n\n      if (velocity) {\n        _this._scrollMetrics.velocity = _this._selectOffset(velocity);\n      }\n\n      _this._computeBlankness();\n\n      _this.props.onScrollEndDrag && _this.props.onScrollEndDrag(e);\n    };\n\n    _this._onMomentumScrollEnd = function (e) {\n      _this._scrollMetrics.velocity = 0;\n\n      _this._computeBlankness();\n\n      _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e);\n    };\n\n    _this._updateCellsToRender = function () {\n      var _this$props = _this.props,\n          data = _this$props.data,\n          getItemCount = _this$props.getItemCount,\n          onEndReachedThreshold = _this$props.onEndReachedThreshold;\n\n      var isVirtualizationDisabled = _this._isVirtualizationDisabled();\n\n      _this._updateViewableItems(data);\n\n      if (!data) {\n        return;\n      }\n\n      _this.setState(function (state) {\n        var newState;\n        var _this$_scrollMetrics = _this._scrollMetrics,\n            contentLength = _this$_scrollMetrics.contentLength,\n            offset = _this$_scrollMetrics.offset,\n            visibleLength = _this$_scrollMetrics.visibleLength;\n\n        if (!isVirtualizationDisabled) {\n          if (visibleLength > 0 && contentLength > 0) {\n            if (!_this.props.initialScrollIndex || _this._scrollMetrics.offset) {\n              newState = computeWindowedRenderLimits(_this.props, state, _this._getFrameMetricsApprox, _this._scrollMetrics);\n            }\n          }\n        } else {\n          var distanceFromEnd = contentLength - visibleLength - offset;\n          var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? _this.props.maxToRenderPerBatch : 0;\n          newState = {\n            first: 0,\n            last: Math.min(state.last + renderAhead, getItemCount(data) - 1)\n          };\n        }\n\n        if (newState && _this._nestedChildLists.size > 0) {\n          var newFirst = newState.first;\n          var newLast = newState.last;\n\n          for (var ii = newFirst; ii <= newLast; ii++) {\n            var cellKeyForIndex = _this._indicesToKeys.get(ii);\n\n            var childListKeys = cellKeyForIndex && _this._cellKeysToChildListKeys.get(cellKeyForIndex);\n\n            if (!childListKeys) {\n              continue;\n            }\n\n            var someChildHasMore = false;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(childListKeys), _step; !(_step = _iterator()).done;) {\n              var childKey = _step.value;\n\n              var childList = _this._nestedChildLists.get(childKey);\n\n              if (childList && childList.ref && childList.ref.hasMore()) {\n                someChildHasMore = true;\n                break;\n              }\n            }\n\n            if (someChildHasMore) {\n              newState.last = ii;\n              break;\n            }\n          }\n        }\n\n        if (newState != null && newState.first === state.first && newState.last === state.last) {\n          newState = null;\n        }\n\n        return newState;\n      });\n    };\n\n    _this._createViewToken = function (index, isViewable) {\n      var _this$props2 = _this.props,\n          data = _this$props2.data,\n          getItem = _this$props2.getItem,\n          keyExtractor = _this$props2.keyExtractor;\n      var item = getItem(data, index);\n      return {\n        index: index,\n        item: item,\n        key: keyExtractor(item, index),\n        isViewable: isViewable\n      };\n    };\n\n    _this._getFrameMetricsApprox = function (index) {\n      var frame = _this._getFrameMetrics(index);\n\n      if (frame && frame.index === index) {\n        return frame;\n      } else {\n        var getItemLayout = _this.props.getItemLayout;\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: _this._averageCellLength,\n          offset: _this._averageCellLength * index\n        };\n      }\n    };\n\n    _this._getFrameMetrics = function (index) {\n      var _this$props3 = _this.props,\n          data = _this$props3.data,\n          getItem = _this$props3.getItem,\n          getItemCount = _this$props3.getItemCount,\n          getItemLayout = _this$props3.getItemLayout,\n          keyExtractor = _this$props3.keyExtractor;\n      invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n\n      var frame = item && _this._frames[keyExtractor(item, index)];\n\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          frame = getItemLayout(data, index);\n        }\n      }\n\n      return frame;\n    };\n\n    invariant(!_props.onScroll || !_props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(_props.windowSize > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    _this._fillRateHelper = new FillRateHelper(_this._getFrameMetrics);\n    _this._updateCellsToRenderBatcher = new Batchinator(_this._updateCellsToRender, _this.props.updateCellsBatchingPeriod);\n\n    if (_this.props.viewabilityConfigCallbackPairs) {\n      _this._viewabilityTuples = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged\n        };\n      });\n    } else if (_this.props.onViewableItemsChanged) {\n      _this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(_this.props.viewabilityConfig),\n        onViewableItemsChanged: _this.props.onViewableItemsChanged\n      });\n    }\n\n    var initialState = {\n      first: _this.props.initialScrollIndex || 0,\n      last: Math.min(_this.props.getItemCount(_this.props.data), (_this.props.initialScrollIndex || 0) + _this.props.initialNumToRender) - 1\n    };\n\n    if (_this._isNestedWithSameOrientation()) {\n      var storedState = _this.context.getNestedChildState(_this._getListKey());\n\n      if (storedState) {\n        initialState = storedState;\n        _this.state = storedState;\n        _this._frames = storedState.frames;\n      }\n    }\n\n    _this.state = initialState;\n    return _this;\n  }\n\n  _createClass(VirtualizedList, [{\n    key: \"scrollToEnd\",\n    value: function scrollToEnd(params) {\n      var animated = params ? params.animated : true;\n      var veryLast = this.props.getItemCount(this.props.data) - 1;\n\n      var frame = this._getFrameMetricsApprox(veryLast);\n\n      var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n\n      if (this._scrollRef == null) {\n        return;\n      }\n\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n\n      this._scrollRef.scrollTo(this.props.horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(params) {\n      var _this$props4 = this.props,\n          data = _this$props4.data,\n          horizontal = _this$props4.horizontal,\n          getItemCount = _this$props4.getItemCount,\n          getItemLayout = _this$props4.getItemLayout,\n          onScrollToIndexFailed = _this$props4.onScrollToIndexFailed;\n      var animated = params.animated,\n          index = params.index,\n          viewOffset = params.viewOffset,\n          viewPosition = params.viewPosition;\n      invariant(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n      invariant(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n      invariant(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n\n      if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n        invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n        onScrollToIndexFailed({\n          averageItemLength: this._averageCellLength,\n          highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n          index: index\n        });\n        return;\n      }\n\n      var frame = this._getFrameMetricsApprox(index);\n\n      var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n\n      if (this._scrollRef == null) {\n        return;\n      }\n\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n\n      this._scrollRef.scrollTo(horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToItem\",\n    value: function scrollToItem(params) {\n      var item = params.item;\n      var _this$props5 = this.props,\n          data = _this$props5.data,\n          getItem = _this$props5.getItem,\n          getItemCount = _this$props5.getItemCount;\n      var itemCount = getItemCount(data);\n\n      for (var _index = 0; _index < itemCount; _index++) {\n        if (getItem(data, _index) === item) {\n          this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n            index: _index\n          }));\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"scrollToOffset\",\n    value: function scrollToOffset(params) {\n      var animated = params.animated,\n          offset = params.offset;\n\n      if (this._scrollRef == null) {\n        return;\n      }\n\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n\n      this._scrollRef.scrollTo(this.props.horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"recordInteraction\",\n    value: function recordInteraction() {\n      this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref.recordInteraction();\n      });\n\n      this._viewabilityTuples.forEach(function (t) {\n        t.viewabilityHelper.recordInteraction();\n      });\n\n      this._updateViewableItems(this.props.data);\n    }\n  }, {\n    key: \"flashScrollIndicators\",\n    value: function flashScrollIndicators() {\n      if (this._scrollRef == null) {\n        return;\n      }\n\n      this._scrollRef.flashScrollIndicators();\n    }\n  }, {\n    key: \"getScrollResponder\",\n    value: function getScrollResponder() {\n      if (this._scrollRef && this._scrollRef.getScrollResponder) {\n        return this._scrollRef.getScrollResponder();\n      }\n    }\n  }, {\n    key: \"getScrollableNode\",\n    value: function getScrollableNode() {\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        return this._scrollRef.getScrollableNode();\n      } else {\n        return ReactNative.findNodeHandle(this._scrollRef);\n      }\n    }\n  }, {\n    key: \"getScrollRef\",\n    value: function getScrollRef() {\n      if (this._scrollRef && this._scrollRef.getScrollRef) {\n        return this._scrollRef.getScrollRef();\n      } else {\n        return this._scrollRef;\n      }\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      if (this._scrollRef) {\n        this._scrollRef.setNativeProps(props);\n      }\n    }\n  }, {\n    key: \"_getCellKey\",\n    value: function _getCellKey() {\n      var _this$context;\n\n      return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n    }\n  }, {\n    key: \"_getListKey\",\n    value: function _getListKey() {\n      return this.props.listKey || this._getCellKey();\n    }\n  }, {\n    key: \"_getDebugInfo\",\n    value: function _getDebugInfo() {\n      var _this$context2;\n\n      return {\n        listKey: this._getListKey(),\n        cellKey: this._getCellKey(),\n        horizontal: !!this.props.horizontal,\n        parent: (_this$context2 = this.context) == null ? void 0 : _this$context2.debugInfo\n      };\n    }\n  }, {\n    key: \"hasMore\",\n    value: function hasMore() {\n      return this._hasMore;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.registerAsNestedChild({\n          cellKey: this._getCellKey(),\n          key: this._getListKey(),\n          ref: this,\n          parentDebugInfo: this.context.debugInfo\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.unregisterAsNestedChild({\n          key: this._getListKey(),\n          state: {\n            first: this.state.first,\n            last: this.state.last,\n            frames: this._frames\n          }\n        });\n      }\n\n      this._updateViewableItems(null);\n\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.dispose();\n      });\n\n      this._fillRateHelper.deactivateAndFlush();\n    }\n  }, {\n    key: \"_pushCells\",\n    value: function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n      var _this2 = this;\n\n      var _this$props6 = this.props,\n          CellRendererComponent = _this$props6.CellRendererComponent,\n          ItemSeparatorComponent = _this$props6.ItemSeparatorComponent,\n          data = _this$props6.data,\n          getItem = _this$props6.getItem,\n          getItemCount = _this$props6.getItemCount,\n          horizontal = _this$props6.horizontal,\n          keyExtractor = _this$props6.keyExtractor;\n      var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n      var end = getItemCount(data) - 1;\n      var prevCellKey;\n      last = Math.min(end, last);\n\n      var _loop = function _loop(ii) {\n        var item = getItem(data, ii);\n        var key = keyExtractor(item, ii);\n\n        _this2._indicesToKeys.set(ii, key);\n\n        if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n          stickyHeaderIndices.push(cells.length);\n        }\n\n        cells.push(_jsx(CellRenderer, {\n          CellRendererComponent: CellRendererComponent,\n          ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n          cellKey: key,\n          fillRateHelper: _this2._fillRateHelper,\n          horizontal: horizontal,\n          index: ii,\n          inversionStyle: inversionStyle,\n          item: item,\n          prevCellKey: prevCellKey,\n          onUpdateSeparators: _this2._onUpdateSeparators,\n          onLayout: function onLayout(e) {\n            return _this2._onCellLayout(e, key, ii);\n          },\n          onUnmount: _this2._onCellUnmount,\n          parentProps: _this2.props,\n          ref: function ref(_ref) {\n            _this2._cellRefs[key] = _ref;\n          }\n        }, key));\n        prevCellKey = key;\n      };\n\n      for (var ii = first; ii <= last; ii++) {\n        _loop(ii);\n      }\n    }\n  }, {\n    key: \"_isVirtualizationDisabled\",\n    value: function _isVirtualizationDisabled() {\n      return this.props.disableVirtualization || false;\n    }\n  }, {\n    key: \"_isNestedWithSameOrientation\",\n    value: function _isNestedWithSameOrientation() {\n      var nestedContext = this.context;\n      return !!(nestedContext && !!nestedContext.horizontal === !!this.props.horizontal);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (__DEV__) {\n        var flatStyles = flattenStyle(this.props.contentContainerStyle);\n\n        if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n          console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n        }\n      }\n\n      var _this$props7 = this.props,\n          ListEmptyComponent = _this$props7.ListEmptyComponent,\n          ListFooterComponent = _this$props7.ListFooterComponent,\n          ListHeaderComponent = _this$props7.ListHeaderComponent;\n      var _this$props8 = this.props,\n          data = _this$props8.data,\n          horizontal = _this$props8.horizontal;\n\n      var isVirtualizationDisabled = this._isVirtualizationDisabled();\n\n      var inversionStyle = this.props.inverted ? this.props.horizontal ? styles.horizontallyInverted : styles.verticallyInverted : null;\n      var cells = [];\n      var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n      var stickyHeaderIndices = [];\n\n      if (ListHeaderComponent) {\n        if (stickyIndicesFromProps.has(0)) {\n          stickyHeaderIndices.push(0);\n        }\n\n        var element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : _jsx(ListHeaderComponent, {});\n        cells.push(_jsx(VirtualizedListCellContextProvider, {\n          cellKey: this._getCellKey() + '-header',\n          children: _jsx(View, {\n            onLayout: this._onLayoutHeader,\n            style: StyleSheet.compose(inversionStyle, this.props.ListHeaderComponentStyle),\n            children: element\n          })\n        }, \"$header\"));\n      }\n\n      var itemCount = this.props.getItemCount(data);\n\n      if (itemCount > 0) {\n        _usedIndexForKey = false;\n        _keylessItemComponentName = '';\n        var spacerKey = !horizontal ? 'height' : 'width';\n        var lastInitialIndex = this.props.initialScrollIndex ? -1 : this.props.initialNumToRender - 1;\n        var _this$state = this.state,\n            first = _this$state.first,\n            last = _this$state.last;\n\n        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);\n\n        var firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n\n        if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n          var insertedStickySpacer = false;\n\n          if (stickyIndicesFromProps.size > 0) {\n            var stickyOffset = ListHeaderComponent ? 1 : 0;\n\n            for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n              if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n                var initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n                var stickyBlock = this._getFrameMetricsApprox(ii);\n\n                var leadSpace = stickyBlock.offset - initBlock.offset - (this.props.initialScrollIndex ? 0 : initBlock.length);\n                cells.push(_jsx(View, {\n                  style: _defineProperty({}, spacerKey, leadSpace)\n                }, \"$sticky_lead\"));\n\n                this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);\n\n                var trailSpace = this._getFrameMetricsApprox(first).offset - (stickyBlock.offset + stickyBlock.length);\n                cells.push(_jsx(View, {\n                  style: _defineProperty({}, spacerKey, trailSpace)\n                }, \"$sticky_trail\"));\n                insertedStickySpacer = true;\n                break;\n              }\n            }\n          }\n\n          if (!insertedStickySpacer) {\n            var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n            var firstSpace = this._getFrameMetricsApprox(first).offset - (_initBlock.offset + _initBlock.length);\n\n            cells.push(_jsx(View, {\n              style: _defineProperty({}, spacerKey, firstSpace)\n            }, \"$lead_spacer\"));\n          }\n        }\n\n        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, last, inversionStyle);\n\n        if (!this._hasWarned.keys && _usedIndexForKey) {\n          console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n          this._hasWarned.keys = true;\n        }\n\n        if (!isVirtualizationDisabled && last < itemCount - 1) {\n          var lastFrame = this._getFrameMetricsApprox(last);\n\n          var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n\n          var endFrame = this._getFrameMetricsApprox(end);\n\n          var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);\n          cells.push(_jsx(View, {\n            style: _defineProperty({}, spacerKey, tailSpacerLength)\n          }, \"$tail_spacer\"));\n        }\n      } else if (ListEmptyComponent) {\n        var _element = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : _jsx(ListEmptyComponent, {});\n\n        cells.push(React.cloneElement(_element, {\n          key: '$empty',\n          onLayout: function onLayout(event) {\n            _this3._onLayoutEmpty(event);\n\n            if (_element.props.onLayout) {\n              _element.props.onLayout(event);\n            }\n          },\n          style: StyleSheet.compose(inversionStyle, _element.props.style)\n        }));\n      }\n\n      if (ListFooterComponent) {\n        var _element2 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : _jsx(ListFooterComponent, {});\n\n        cells.push(_jsx(VirtualizedListCellContextProvider, {\n          cellKey: this._getFooterCellKey(),\n          children: _jsx(View, {\n            onLayout: this._onLayoutFooter,\n            style: StyleSheet.compose(inversionStyle, this.props.ListFooterComponentStyle),\n            children: _element2\n          })\n        }, \"$footer\"));\n      }\n\n      var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n        onContentSizeChange: this._onContentSizeChange,\n        onLayout: this._onLayout,\n        onScroll: this._onScroll,\n        onScrollBeginDrag: this._onScrollBeginDrag,\n        onScrollEndDrag: this._onScrollEndDrag,\n        onMomentumScrollEnd: this._onMomentumScrollEnd,\n        scrollEventThrottle: this.props.scrollEventThrottle,\n        invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n        stickyHeaderIndices: stickyHeaderIndices,\n        style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n      });\n\n      this._hasMore = this.state.last < this.props.getItemCount(this.props.data) - 1;\n\n      var innerRet = _jsx(VirtualizedListContextProvider, {\n        value: {\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: this.props.horizontal,\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          getNestedChildState: this._getNestedChildState,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild,\n          debugInfo: this._getDebugInfo()\n        },\n        children: React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n          ref: this._captureScrollRef\n        }, cells)\n      });\n\n      var ret = innerRet;\n\n      if (__DEV__) {\n        ret = _jsx(ScrollView.Context.Consumer, {\n          children: function children(scrollContext) {\n            if (scrollContext != null && !scrollContext.horizontal === !_this3.props.horizontal && !_this3._hasWarned.nesting && _this3.context == null) {\n              console.error('VirtualizedLists should never be nested inside plain ScrollViews with the same ' + 'orientation because it can break windowing and other functionality - use another ' + 'VirtualizedList-backed container instead.');\n              _this3._hasWarned.nesting = true;\n            }\n\n            return innerRet;\n          }\n        });\n      }\n\n      if (this.props.debug) {\n        return _jsxs(View, {\n          style: styles.debug,\n          children: [ret, this._renderDebugOverlay()]\n        });\n      } else {\n        return ret;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props9 = this.props,\n          data = _this$props9.data,\n          extraData = _this$props9.extraData;\n\n      if (data !== prevProps.data || extraData !== prevProps.extraData) {\n        this._viewabilityTuples.forEach(function (tuple) {\n          tuple.viewabilityHelper.resetViewableIndices();\n        });\n      }\n\n      var hiPriInProgress = this._hiPriInProgress;\n\n      this._scheduleCellsToRenderUpdate();\n\n      if (hiPriInProgress) {\n        this._hiPriInProgress = false;\n      }\n    }\n  }, {\n    key: \"_computeBlankness\",\n    value: function _computeBlankness() {\n      this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);\n    }\n  }, {\n    key: \"_onCellLayout\",\n    value: function _onCellLayout(e, cellKey, index) {\n      var layout = e.nativeEvent.layout;\n      var next = {\n        offset: this._selectOffset(layout),\n        length: this._selectLength(layout),\n        index: index,\n        inLayout: true\n      };\n      var curr = this._frames[cellKey];\n\n      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n        this._totalCellLength += next.length - (curr ? curr.length : 0);\n        this._totalCellsMeasured += curr ? 0 : 1;\n        this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n        this._frames[cellKey] = next;\n        this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n\n        this._scheduleCellsToRenderUpdate();\n      } else {\n        this._frames[cellKey].inLayout = true;\n      }\n\n      this._triggerRemeasureForChildListsInCell(cellKey);\n\n      this._computeBlankness();\n\n      this._updateViewableItems(this.props.data);\n    }\n  }, {\n    key: \"_triggerRemeasureForChildListsInCell\",\n    value: function _triggerRemeasureForChildListsInCell(cellKey) {\n      var childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n\n      if (childListKeys) {\n        for (var _iterator2 = _createForOfIteratorHelperLoose(childListKeys), _step2; !(_step2 = _iterator2()).done;) {\n          var childKey = _step2.value;\n\n          var childList = this._nestedChildLists.get(childKey);\n\n          childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n        }\n      }\n    }\n  }, {\n    key: \"measureLayoutRelativeToContainingList\",\n    value: function measureLayoutRelativeToContainingList() {\n      var _this4 = this;\n\n      try {\n        if (!this._scrollRef) {\n          return;\n        }\n\n        this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), function (x, y, width, height) {\n          _this4._offsetFromParentVirtualizedList = _this4._selectOffset({\n            x: x,\n            y: y\n          });\n          _this4._scrollMetrics.contentLength = _this4._selectLength({\n            width: width,\n            height: height\n          });\n\n          var scrollMetrics = _this4._convertParentScrollMetrics(_this4.context.getScrollMetrics());\n\n          _this4._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          _this4._scrollMetrics.offset = scrollMetrics.offset;\n        }, function (error) {\n          console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n        });\n      } catch (error) {\n        console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n      }\n    }\n  }, {\n    key: \"_getFooterCellKey\",\n    value: function _getFooterCellKey() {\n      return this._getCellKey() + '-footer';\n    }\n  }, {\n    key: \"_renderDebugOverlay\",\n    value: function _renderDebugOverlay() {\n      var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n      var framesInLayout = [];\n      var itemCount = this.props.getItemCount(this.props.data);\n\n      for (var ii = 0; ii < itemCount; ii++) {\n        var frame = this._getFrameMetricsApprox(ii);\n\n        if (frame.inLayout) {\n          framesInLayout.push(frame);\n        }\n      }\n\n      var windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n\n      var frameLast = this._getFrameMetricsApprox(this.state.last);\n\n      var windowLen = frameLast.offset + frameLast.length - windowTop;\n      var visTop = this._scrollMetrics.offset;\n      var visLen = this._scrollMetrics.visibleLength;\n      return _jsxs(View, {\n        style: [styles.debugOverlayBase, styles.debugOverlay],\n        children: [framesInLayout.map(function (f, ii) {\n          return _jsx(View, {\n            style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n              top: f.offset * normalize,\n              height: f.length * normalize\n            }]\n          }, 'f' + ii);\n        }), _jsx(View, {\n          style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n            top: windowTop * normalize,\n            height: windowLen * normalize\n          }]\n        }), _jsx(View, {\n          style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n            top: visTop * normalize,\n            height: visLen * normalize\n          }]\n        })]\n      });\n    }\n  }, {\n    key: \"_selectLength\",\n    value: function _selectLength(metrics) {\n      return !this.props.horizontal ? metrics.height : metrics.width;\n    }\n  }, {\n    key: \"_selectOffset\",\n    value: function _selectOffset(metrics) {\n      return !this.props.horizontal ? metrics.y : metrics.x;\n    }\n  }, {\n    key: \"_maybeCallOnEndReached\",\n    value: function _maybeCallOnEndReached() {\n      var _this$props10 = this.props,\n          data = _this$props10.data,\n          getItemCount = _this$props10.getItemCount,\n          onEndReached = _this$props10.onEndReached,\n          onEndReachedThreshold = _this$props10.onEndReachedThreshold;\n      var _this$_scrollMetrics2 = this._scrollMetrics,\n          contentLength = _this$_scrollMetrics2.contentLength,\n          visibleLength = _this$_scrollMetrics2.visibleLength,\n          offset = _this$_scrollMetrics2.offset;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n      var threshold = onEndReachedThreshold ? onEndReachedThreshold * visibleLength : 2;\n\n      if (onEndReached && this.state.last === getItemCount(data) - 1 && distanceFromEnd < threshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n        this._sentEndForContentLength = this._scrollMetrics.contentLength;\n        onEndReached({\n          distanceFromEnd: distanceFromEnd\n        });\n      } else if (distanceFromEnd > threshold) {\n        this._sentEndForContentLength = 0;\n      }\n    }\n  }, {\n    key: \"_scheduleCellsToRenderUpdate\",\n    value: function _scheduleCellsToRenderUpdate() {\n      var _this$state2 = this.state,\n          first = _this$state2.first,\n          last = _this$state2.last;\n      var _this$_scrollMetrics3 = this._scrollMetrics,\n          offset = _this$_scrollMetrics3.offset,\n          visibleLength = _this$_scrollMetrics3.visibleLength,\n          velocity = _this$_scrollMetrics3.velocity;\n      var itemCount = this.props.getItemCount(this.props.data);\n      var hiPri = false;\n      var scrollingThreshold = this.props.onEndReachedThreshold * visibleLength / 2;\n\n      if (first > 0) {\n        var distTop = offset - this._getFrameMetricsApprox(first).offset;\n\n        hiPri = hiPri || distTop < 0 || velocity < -2 && distTop < scrollingThreshold;\n      }\n\n      if (last < itemCount - 1) {\n        var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n        hiPri = hiPri || distBottom < 0 || velocity > 2 && distBottom < scrollingThreshold;\n      }\n\n      if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n        this._hiPriInProgress = true;\n\n        this._updateCellsToRenderBatcher.dispose({\n          abort: true\n        });\n\n        this._updateCellsToRender();\n\n        return;\n      } else {\n        this._updateCellsToRenderBatcher.schedule();\n      }\n    }\n  }, {\n    key: \"_updateViewableItems\",\n    value: function _updateViewableItems(data) {\n      var _this5 = this;\n\n      var getItemCount = this.props.getItemCount;\n\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.onUpdate(getItemCount(data), _this5._scrollMetrics.offset, _this5._scrollMetrics.visibleLength, _this5._getFrameMetrics, _this5._createViewToken, tuple.onViewableItemsChanged, _this5.state);\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(newProps, prevState) {\n      var data = newProps.data,\n          getItemCount = newProps.getItemCount,\n          maxToRenderPerBatch = newProps.maxToRenderPerBatch;\n      return {\n        first: Math.max(0, Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch)),\n        last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1))\n      };\n    }\n  }]);\n\n  return VirtualizedList;\n}(React.PureComponent);\n\nVirtualizedList.contextType = VirtualizedListContext;\nVirtualizedList.defaultProps = {\n  disableVirtualization: false,\n  horizontal: false,\n  initialNumToRender: 10,\n  keyExtractor: function keyExtractor(item, index) {\n    if (item.key != null) {\n      return item.key;\n    }\n\n    if (item.id != null) {\n      return item.id;\n    }\n\n    _usedIndexForKey = true;\n\n    if (item.type && item.type.displayName) {\n      _keylessItemComponentName = item.type.displayName;\n    }\n\n    return String(index);\n  },\n  maxToRenderPerBatch: 10,\n  onEndReachedThreshold: 2,\n  scrollEventThrottle: 50,\n  updateCellsBatchingPeriod: 50,\n  windowSize: 21\n};\n\nvar CellRenderer = function (_React$Component) {\n  _inherits(CellRenderer, _React$Component);\n\n  var _super2 = _createSuper(CellRenderer);\n\n  function CellRenderer() {\n    var _this6;\n\n    _classCallCheck(this, CellRenderer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this6 = _super2.call.apply(_super2, [this].concat(args));\n    _this6.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: _this6.props.item\n      }\n    };\n    _this6._separators = {\n      highlight: function highlight() {\n        var _this6$props = _this6.props,\n            cellKey = _this6$props.cellKey,\n            prevCellKey = _this6$props.prevCellKey;\n\n        _this6.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: function unhighlight() {\n        var _this6$props2 = _this6.props,\n            cellKey = _this6$props2.cellKey,\n            prevCellKey = _this6$props2.prevCellKey;\n\n        _this6.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: function updateProps(select, newProps) {\n        var _this6$props3 = _this6.props,\n            cellKey = _this6$props3.cellKey,\n            prevCellKey = _this6$props3.prevCellKey;\n\n        _this6.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);\n      }\n    };\n    return _this6;\n  }\n\n  _createClass(CellRenderer, [{\n    key: \"updateSeparatorProps\",\n    value: function updateSeparatorProps(newProps) {\n      this.setState(function (state) {\n        return {\n          separatorProps: _objectSpread(_objectSpread({}, state.separatorProps), newProps)\n        };\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.onUnmount(this.props.cellKey);\n    }\n  }, {\n    key: \"_renderElement\",\n    value: function _renderElement(renderItem, ListItemComponent, item, index) {\n      if (renderItem && ListItemComponent) {\n        console.warn('VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' + ' precedence over renderItem.');\n      }\n\n      if (ListItemComponent) {\n        return React.createElement(ListItemComponent, {\n          item: item,\n          index: index,\n          separators: this._separators\n        });\n      }\n\n      if (renderItem) {\n        return renderItem({\n          item: item,\n          index: index,\n          separators: this._separators\n        });\n      }\n\n      invariant(false, 'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props11 = this.props,\n          CellRendererComponent = _this$props11.CellRendererComponent,\n          ItemSeparatorComponent = _this$props11.ItemSeparatorComponent,\n          fillRateHelper = _this$props11.fillRateHelper,\n          horizontal = _this$props11.horizontal,\n          item = _this$props11.item,\n          index = _this$props11.index,\n          inversionStyle = _this$props11.inversionStyle,\n          parentProps = _this$props11.parentProps;\n      var renderItem = parentProps.renderItem,\n          getItemLayout = parentProps.getItemLayout,\n          ListItemComponent = parentProps.ListItemComponent;\n\n      var element = this._renderElement(renderItem, ListItemComponent, item, index);\n\n      var onLayout = getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout;\n\n      var itemSeparator = ItemSeparatorComponent && _jsx(ItemSeparatorComponent, _objectSpread({}, this.state.separatorProps));\n\n      var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n      var result = !CellRendererComponent ? _jsxs(View, {\n        style: cellStyle,\n        onLayout: onLayout,\n        children: [element, itemSeparator]\n      }) : _jsxs(CellRendererComponent, _objectSpread(_objectSpread({}, this.props), {}, {\n        style: cellStyle,\n        onLayout: onLayout,\n        children: [element, itemSeparator]\n      }));\n      return _jsx(VirtualizedListCellContextProvider, {\n        cellKey: this.props.cellKey,\n        children: result\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      return {\n        separatorProps: _objectSpread(_objectSpread({}, prevState.separatorProps), {}, {\n          leadingItem: props.item\n        })\n      };\n    }\n  }]);\n\n  return CellRenderer;\n}(React.Component);\n\nfunction describeNestedLists(childList) {\n  var trace = 'VirtualizedList trace:\\n' + (\"  Child (\" + (childList.horizontal ? 'horizontal' : 'vertical') + \"):\\n\") + (\"    listKey: \" + childList.key + \"\\n\") + (\"    cellKey: \" + childList.cellKey);\n  var debugInfo = childList.parentDebugInfo;\n\n  while (debugInfo) {\n    trace += \"\\n  Parent (\" + (debugInfo.horizontal ? 'horizontal' : 'vertical') + \"):\\n\" + (\"    listKey: \" + debugInfo.listKey + \"\\n\") + (\"    cellKey: \" + debugInfo.cellKey);\n    debugInfo = debugInfo.parent;\n  }\n\n  return trace;\n}\n\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nmodule.exports = VirtualizedList;","map":{"version":3,"sources":["C:/Users/nicol/Documents/Repos/HackDavis/PantryPickupProject/node_modules/react-native/Libraries/Lists/VirtualizedList.js"],"names":["Batchinator","require","FillRateHelper","ReactNative","RefreshControl","ScrollView","StyleSheet","View","ViewabilityHelper","flattenStyle","infoLog","invariant","computeWindowedRenderLimits","React","VirtualizedListCellContextProvider","VirtualizedListContext","VirtualizedListContextProvider","_usedIndexForKey","_keylessItemComponentName","VirtualizedList","props","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","context","getOutermostParentListRef","_getNestedChildState","key","existingChildData","_nestedChildLists","get","state","_registerAsNestedChild","childList","childListsInCell","_cellKeysToChildListKeys","cellKey","Set","add","set","ref","console","error","describeNestedLists","horizontal","_hasInteracted","recordInteraction","_unregisterAsNestedChild","_onUpdateSeparators","keys","newProps","forEach","_cellRefs","updateSeparatorProps","_averageCellLength","Map","_frames","_footerLength","_hasDoneInitialScroll","_hasMore","_hasWarned","_headerLength","_hiPriInProgress","_highestMeasuredFrameIndex","_indicesToKeys","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","offset","timestamp","velocity","visibleLength","_scrollRef","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellUnmount","curr","inLayout","_onLayout","e","measureLayoutRelativeToContainingList","_selectLength","nativeEvent","layout","onLayout","_scheduleCellsToRenderUpdate","_maybeCallOnEndReached","_onLayoutEmpty","_onLayoutFooter","_triggerRemeasureForChildListsInCell","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","contentOffset","scrollToIndex","animated","index","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_selectOffset","Math","max","perf","prevDt","_updateViewableItems","data","_fillRateHelper","activate","_computeBlankness","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","getItemCount","onEndReachedThreshold","isVirtualizationDisabled","_isVirtualizationDisabled","setState","newState","_getFrameMetricsApprox","distanceFromEnd","renderAhead","maxToRenderPerBatch","first","last","min","size","newFirst","newLast","ii","cellKeyForIndex","childListKeys","someChildHasMore","childKey","hasMore","_createViewToken","isViewable","getItem","keyExtractor","item","frame","_getFrameMetrics","getItemLayout","length","__isNative","windowSize","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","push","initialState","initialNumToRender","storedState","getNestedChildState","_getListKey","frames","params","veryLast","scrollTo","warn","x","y","onScrollToIndexFailed","viewOffset","viewPosition","averageItemLength","highestMeasuredFrameIndex","itemCount","t","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","getScrollRef","setNativeProps","listKey","_getCellKey","parent","debugInfo","registerAsNestedChild","parentDebugInfo","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","CellRendererComponent","ItemSeparatorComponent","stickyOffset","ListHeaderComponent","end","prevCellKey","has","undefined","_onCellLayout","disableVirtualization","nestedContext","__DEV__","flatStyles","contentContainerStyle","flexWrap","ListEmptyComponent","ListFooterComponent","inverted","styles","horizontallyInverted","verticallyInverted","element","isValidElement","compose","ListHeaderComponentStyle","spacerKey","lastInitialIndex","_pushCells","firstAfterInitial","insertedStickySpacer","initBlock","stickyBlock","leadSpace","trailSpace","firstSpace","lastFrame","endFrame","tailSpacerLength","cloneElement","event","style","ListFooterComponentStyle","scrollProps","scrollEventThrottle","invertStickyHeaders","innerRet","getScrollMetrics","_getDebugInfo","renderScrollComponent","ret","scrollContext","nesting","debug","_renderDebugOverlay","prevProps","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","next","measureLayout","scrollMetrics","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","onEndReached","threshold","hiPri","scrollingThreshold","distTop","distBottom","schedule","onUpdate","prevState","PureComponent","contextType","defaultProps","id","type","displayName","String","CellRenderer","separatorProps","highlighted","leadingItem","_separators","highlight","onUpdateSeparators","unhighlight","updateProps","select","onUnmount","renderItem","ListItemComponent","createElement","separators","fillRateHelper","parentProps","_renderElement","enabled","itemSeparator","cellStyle","rowReverse","columnReverse","row","result","Component","trace","create","transform","scaleY","scaleX","flexDirection","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst Batchinator = require('../Interaction/Batchinator');\nconst FillRateHelper = require('./FillRateHelper');\nconst ReactNative = require('../Renderer/shims/ReactNative');\nconst RefreshControl = require('../Components/RefreshControl/RefreshControl');\nconst ScrollView = require('../Components/ScrollView/ScrollView');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst View = require('../Components/View/View');\nconst ViewabilityHelper = require('./ViewabilityHelper');\n\nconst flattenStyle = require('../StyleSheet/flattenStyle');\nconst infoLog = require('../Utilities/infoLog');\nconst invariant = require('invariant');\n\nconst {computeWindowedRenderLimits} = require('./VirtualizeUtils');\n\nimport * as React from 'react';\nimport type {ScrollResponderType} from '../Components/ScrollView/ScrollView';\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {\n  ViewabilityConfig,\n  ViewToken,\n  ViewabilityConfigCallbackPair,\n} from './ViewabilityHelper';\nimport {\n  VirtualizedListCellContextProvider,\n  VirtualizedListContext,\n  VirtualizedListContextProvider,\n  type ChildListState,\n  type ListDebugInfo,\n} from './VirtualizedListContext.js';\n\ntype Item = any;\n\nexport type Separators = {\n  highlight: () => void,\n  unhighlight: () => void,\n  updateProps: (select: 'leading' | 'trailing', newProps: Object) => void,\n  ...\n};\n\nexport type RenderItemProps<ItemT> = {\n  item: ItemT,\n  index: number,\n  separators: Separators,\n  ...\n};\n\nexport type RenderItemType<ItemT> = (\n  info: RenderItemProps<ItemT>,\n) => React.Node;\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  ...\n};\n\ntype RequiredProps = {|\n  /**\n   * The default accessor functions assume this is an Array<{key: string} | {id: string}> but you can override\n   * getItem, getItemCount, and keyExtractor to handle any type of index-based data.\n   */\n  data?: any,\n  /**\n   * A generic accessor for extracting an item from any sort of data blob.\n   */\n  getItem: (data: any, index: number) => ?Item,\n  /**\n   * Determines how many items are in the data blob.\n   */\n  getItemCount: (data: any) => number,\n|};\ntype OptionalProps = {|\n  renderItem?: ?RenderItemType<Item>,\n  /**\n   * `debug` will turn on extra logging and visual overlays to aid with debugging both usage and\n   * implementation, but with a significant perf hit.\n   */\n  debug?: ?boolean,\n  /**\n   * DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\n   * unmounts react instances that are outside of the render window. You should only need to disable\n   * this for debugging purposes.\n   */\n  disableVirtualization?: ?boolean,\n  /**\n   * A marker property for telling the list to re-render (since it implements `PureComponent`). If\n   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the\n   * `data` prop, stick it here and treat it immutably.\n   */\n  extraData?: any,\n  // e.g. height, y\n  getItemLayout?: (\n    data: any,\n    index: number,\n  ) => {\n    length: number,\n    offset: number,\n    index: number,\n    ...\n  },\n  horizontal?: ?boolean,\n  /**\n   * How many items to render in the initial batch. This should be enough to fill the screen but not\n   * much more. Note these items will never be unmounted as part of the windowed rendering in order\n   * to improve perceived performance of scroll-to-top actions.\n   */\n  initialNumToRender: number,\n  /**\n   * Instead of starting at the top with the first item, start at `initialScrollIndex`. This\n   * disables the \"scroll to top\" optimization that keeps the first `initialNumToRender` items\n   * always rendered and immediately renders the items starting at this initial index. Requires\n   * `getItemLayout` to be implemented.\n   */\n  initialScrollIndex?: ?number,\n  /**\n   * Reverses the direction of scroll. Uses scale transforms of -1.\n   */\n  inverted?: ?boolean,\n  keyExtractor: (item: Item, index: number) => string,\n  /**\n   * Each cell is rendered using this element. Can be a React Component Class,\n   * or a render function. Defaults to using View.\n   */\n  CellRendererComponent?: ?React.ComponentType<any>,\n  /**\n   * Rendered in between each item, but not at the top or bottom. By default, `highlighted` and\n   * `leadingItem` props are provided. `renderItem` provides `separators.highlight`/`unhighlight`\n   * which will update the `highlighted` prop, but you can also add custom props with\n   * `separators.updateProps`.\n   */\n  ItemSeparatorComponent?: ?React.ComponentType<any>,\n  /**\n   * Takes an item from `data` and renders it into the list. Example usage:\n   *\n   *     <FlatList\n   *       ItemSeparatorComponent={Platform.OS !== 'android' && ({highlighted}) => (\n   *         <View style={[style.separator, highlighted && {marginLeft: 0}]} />\n   *       )}\n   *       data={[{title: 'Title Text', key: 'item1'}]}\n   *       ListItemComponent={({item, separators}) => (\n   *         <TouchableHighlight\n   *           onPress={() => this._onPress(item)}\n   *           onShowUnderlay={separators.highlight}\n   *           onHideUnderlay={separators.unhighlight}>\n   *           <View style={{backgroundColor: 'white'}}>\n   *             <Text>{item.title}</Text>\n   *           </View>\n   *         </TouchableHighlight>\n   *       )}\n   *     />\n   *\n   * Provides additional metadata like `index` if you need it, as well as a more generic\n   * `separators.updateProps` function which let's you set whatever props you want to change the\n   * rendering of either the leading separator or trailing separator in case the more common\n   * `highlight` and `unhighlight` (which set the `highlighted: boolean` prop) are insufficient for\n   * your use-case.\n   */\n  ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered when the list is empty. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListEmptyComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered at the bottom of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListFooterComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListFooterComponent\n   */\n  ListFooterComponentStyle?: ViewStyleProp,\n  /**\n   * Rendered at the top of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListHeaderComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListHeaderComponent\n   */\n  ListHeaderComponentStyle?: ViewStyleProp,\n  /**\n   * A unique identifier for this list. If there are multiple VirtualizedLists at the same level of\n   * nesting within another VirtualizedList, this key is necessary for virtualization to\n   * work properly.\n   */\n  listKey?: string,\n  /**\n   * The maximum number of items to render in each incremental render batch. The more rendered at\n   * once, the better the fill rate, but responsiveness may suffer because rendering content may\n   * interfere with responding to button taps or other interactions.\n   */\n  maxToRenderPerBatch: number,\n  /**\n   * Called once when the scroll position gets within `onEndReachedThreshold` of the rendered\n   * content.\n   */\n  onEndReached?: ?(info: {distanceFromEnd: number, ...}) => void,\n  /**\n   * How far from the end (in units of visible length of the list) the bottom edge of the\n   * list must be from the end of the content to trigger the `onEndReached` callback.\n   * Thus a value of 0.5 will trigger `onEndReached` when the end of the content is\n   * within half the visible length of the list.\n   */\n  onEndReachedThreshold?: ?number,\n  /**\n   * If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make\n   * sure to also set the `refreshing` prop correctly.\n   */\n  onRefresh?: ?() => void,\n  /**\n   * Used to handle failures when scrolling to an index that has not been measured yet. Recommended\n   * action is to either compute your own offset and `scrollTo` it, or scroll as far as possible and\n   * then try again after more items have been rendered.\n   */\n  onScrollToIndexFailed?: ?(info: {\n    index: number,\n    highestMeasuredFrameIndex: number,\n    averageItemLength: number,\n    ...\n  }) => void,\n  /**\n   * Called when the viewability of rows changes, as defined by the\n   * `viewabilityConfig` prop.\n   */\n  onViewableItemsChanged?: ?(info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  persistentScrollbar?: ?boolean,\n  /**\n   * Set this when offset is needed for the loading indicator to show correctly.\n   * @platform android\n   */\n  progressViewOffset?: number,\n  /**\n   * A custom refresh control element. When set, it overrides the default\n   * <RefreshControl> component built internally. The onRefresh and refreshing\n   * props are also ignored. Only works for vertical VirtualizedList.\n   */\n  refreshControl?: ?React.Element<any>,\n  /**\n   * Set this true while waiting for new data from a refresh.\n   */\n  refreshing?: ?boolean,\n  /**\n   * Note: may have bugs (missing content) in some circumstances - use at your own risk.\n   *\n   * This may improve scroll performance for large lists.\n   */\n  removeClippedSubviews?: boolean,\n  /**\n   * Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\n   */\n  renderScrollComponent?: (props: Object) => React.Element<any>,\n  /**\n   * Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\n   * screen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\n   */\n  updateCellsBatchingPeriod: number,\n  /**\n   * See `ViewabilityHelper` for flow type and further documentation.\n   */\n  viewabilityConfig?: ViewabilityConfig,\n  /**\n   * List of ViewabilityConfig/onViewableItemsChanged pairs. A specific onViewableItemsChanged\n   * will be called when its corresponding ViewabilityConfig's conditions are met.\n   */\n  viewabilityConfigCallbackPairs?: Array<ViewabilityConfigCallbackPair>,\n  /**\n   * Determines the maximum number of items rendered outside of the visible area, in units of\n   * visible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\n   * render the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\n   * this number will reduce memory consumption and may improve performance, but will increase the\n   * chance that fast scrolling may reveal momentary blank areas of unrendered content.\n   */\n  windowSize: number,\n  /**\n   * The legacy implementation is no longer supported.\n   */\n  legacyImplementation?: empty,\n|};\n\ntype Props = {|\n  ...React.ElementConfig<typeof ScrollView>,\n  ...RequiredProps,\n  ...OptionalProps,\n|};\n\ntype DefaultProps = {|\n  disableVirtualization: boolean,\n  horizontal: boolean,\n  initialNumToRender: number,\n  keyExtractor: (item: Item, index: number) => string,\n  maxToRenderPerBatch: number,\n  onEndReachedThreshold: number,\n  scrollEventThrottle: number,\n  updateCellsBatchingPeriod: number,\n  windowSize: number,\n|};\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype State = {\n  first: number,\n  last: number,\n};\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist.html)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist.html) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n */\nclass VirtualizedList extends React.PureComponent<Props, State> {\n  static contextType: typeof VirtualizedListContext = VirtualizedListContext;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean, ...}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    const frame = this._getFrameMetricsApprox(veryLast);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }) {\n    const {\n      data,\n      horizontal,\n      getItemCount,\n      getItemLayout,\n      onScrollToIndexFailed,\n    } = this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0,\n      `scrollToIndex out of range: requested index ${index} but minimum is 0`,\n    );\n    invariant(\n      getItemCount(data) >= 1,\n      `scrollToIndex out of range: item length ${getItemCount(\n        data,\n      )} but minimum is 1`,\n    );\n    invariant(\n      index < getItemCount(data),\n      `scrollToIndex out of range: requested index ${index} is out of 0 to ${getItemCount(\n        data,\n      ) - 1}`,\n    );\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index,\n      });\n      return;\n    }\n    const frame = this._getFrameMetricsApprox(index);\n    const offset =\n      Math.max(\n        0,\n        frame.offset -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewPosition?: number,\n    ...\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number, ...}) {\n    const {animated, offset} = params;\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props.data);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder(): ?ScrollResponderType {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode(): ?number {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return ReactNative.findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef():\n    | ?React.ElementRef<typeof ScrollView>\n    | ?React.ElementRef<typeof View> {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  static defaultProps: DefaultProps = {\n    disableVirtualization: false,\n    horizontal: false,\n    initialNumToRender: 10,\n    keyExtractor: (item: Item, index: number) => {\n      if (item.key != null) {\n        return item.key;\n      }\n      if (item.id != null) {\n        return item.id;\n      }\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n      return String(index);\n    },\n    maxToRenderPerBatch: 10,\n    onEndReachedThreshold: 2, // multiples of length\n    scrollEventThrottle: 50,\n    updateCellsBatchingPeriod: 50,\n    windowSize: 21, // multiples of length\n  };\n\n  _getCellKey(): string {\n    return this.context?.cellKey || 'rootList';\n  }\n\n  _getListKey(): string {\n    return this.props.listKey || this._getCellKey();\n  }\n\n  _getDebugInfo(): ListDebugInfo {\n    return {\n      listKey: this._getListKey(),\n      cellKey: this._getCellKey(),\n      horizontal: !!this.props.horizontal,\n      parent: this.context?.debugInfo,\n    };\n  }\n\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _getNestedChildState = (key: string): ?ChildListState => {\n    const existingChildData = this._nestedChildLists.get(key);\n    return existingChildData && existingChildData.state;\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    key: string,\n    ref: VirtualizedList,\n    parentDebugInfo: ListDebugInfo,\n    ...\n  }): ?ChildListState => {\n    // Register the mapping between this child key and the cellKey for its cell\n    const childListsInCell =\n      this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n    childListsInCell.add(childList.key);\n    this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n    const existingChildData = this._nestedChildLists.get(childList.key);\n    if (existingChildData && existingChildData.ref !== null) {\n      console.error(\n        'A VirtualizedList contains a cell which itself contains ' +\n          'more than one VirtualizedList of the same orientation as the parent ' +\n          'list. You must pass a unique listKey prop to each sibling list.\\n\\n' +\n          describeNestedLists({\n            ...childList,\n            // We're called from the child's componentDidMount, so it's safe to\n            // read the child's props here (albeit weird).\n            horizontal: !!childList.ref.props.horizontal,\n          }),\n      );\n    }\n    this._nestedChildLists.set(childList.key, {\n      ref: childList.ref,\n      state: null,\n    });\n\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    key: string,\n    state: ChildListState,\n    ...\n  }): void => {\n    this._nestedChildLists.set(childList.key, {\n      ref: null,\n      state: childList.state,\n    });\n  };\n\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n    invariant(\n      // $FlowFixMe\n      !props.onScroll || !props.onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n\n    invariant(\n      props.windowSize > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        onViewableItemsChanged: this.props.onViewableItemsChanged,\n      });\n    }\n\n    let initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last:\n        Math.min(\n          this.props.getItemCount(this.props.data),\n          (this.props.initialScrollIndex || 0) + this.props.initialNumToRender,\n        ) - 1,\n    };\n\n    if (this._isNestedWithSameOrientation()) {\n      const storedState = this.context.getNestedChildState(this._getListKey());\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    }\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this._getListKey(),\n        ref: this,\n        // NOTE: When the child mounts (here) it's not necessarily safe to read\n        // the parent's props. This is why we explicitly propagate debugInfo\n        // \"down\" via context and \"up\" again via this method call on the\n        // parent.\n        parentDebugInfo: this.context.debugInfo,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({\n        key: this._getListKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames,\n        },\n      });\n    }\n    this._updateViewableItems(null);\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State): State {\n    const {data, getItemCount, maxToRenderPerBatch} = newProps;\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    return {\n      first: Math.max(\n        0,\n        Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch),\n      ),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1)),\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ViewStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      data,\n      getItem,\n      getItemCount,\n      horizontal,\n      keyExtractor,\n    } = this.props;\n    const stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = keyExtractor(item, ii);\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          cellKey={key}\n          fillRateHelper={this._fillRateHelper}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onLayout={e => this._onCellLayout(e, key, ii)}\n          onUnmount={this._onCellUnmount}\n          parentProps={this.props}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isVirtualizationDisabled(): boolean {\n    return this.props.disableVirtualization || false;\n  }\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context;\n    return !!(\n      nestedContext && !!nestedContext.horizontal === !!this.props.horizontal\n    );\n  }\n\n  render(): React.Node {\n    if (__DEV__) {\n      const flatStyles = flattenStyle(this.props.contentContainerStyle);\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn(\n          '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n            'Consider using `numColumns` with `FlatList` instead.',\n        );\n      }\n    }\n    const {\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListHeaderComponent,\n    } = this.props;\n    const {data, horizontal} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    const inversionStyle = this.props.inverted\n      ? this.props.horizontal\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = !horizontal ? 'height' : 'width';\n      const lastInitialIndex = this.props.initialScrollIndex\n        ? -1\n        : this.props.initialNumToRender - 1;\n      const {first, last} = this.state;\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        0,\n        lastInitialIndex,\n        inversionStyle,\n      );\n      const firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        let insertedStickySpacer = false;\n        if (stickyIndicesFromProps.size > 0) {\n          const stickyOffset = ListHeaderComponent ? 1 : 0;\n          // See if there are any sticky headers in the virtualized space that we need to render.\n          for (let ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n              const stickyBlock = this._getFrameMetricsApprox(ii);\n              const leadSpace =\n                stickyBlock.offset -\n                initBlock.offset -\n                (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push(\n                /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment\n                 * suppresses an error found when Flow v0.111 was deployed. To\n                 * see the error, delete this comment and run Flow. */\n                <View key=\"$sticky_lead\" style={{[spacerKey]: leadSpace}} />,\n              );\n              this._pushCells(\n                cells,\n                stickyHeaderIndices,\n                stickyIndicesFromProps,\n                ii,\n                ii,\n                inversionStyle,\n              );\n              const trailSpace =\n                this._getFrameMetricsApprox(first).offset -\n                (stickyBlock.offset + stickyBlock.length);\n              cells.push(\n                /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment\n                 * suppresses an error found when Flow v0.111 was deployed. To\n                 * see the error, delete this comment and run Flow. */\n                <View key=\"$sticky_trail\" style={{[spacerKey]: trailSpace}} />,\n              );\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n        if (!insertedStickySpacer) {\n          const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n          const firstSpace =\n            this._getFrameMetricsApprox(first).offset -\n            (initBlock.offset + initBlock.length);\n          cells.push(\n            /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment\n             * suppresses an error found when Flow v0.111 was deployed. To see\n             * the error, delete this comment and run Flow. */\n            <View key=\"$lead_spacer\" style={{[spacerKey]: firstSpace}} />,\n          );\n        }\n      }\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        firstAfterInitial,\n        last,\n        inversionStyle,\n      );\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        const lastFrame = this._getFrameMetricsApprox(last);\n        // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n        const end = this.props.getItemLayout\n          ? itemCount - 1\n          : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n        const endFrame = this._getFrameMetricsApprox(end);\n        const tailSpacerLength =\n          endFrame.offset +\n          endFrame.length -\n          (lastFrame.offset + lastFrame.length);\n        cells.push(\n          /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.111 was deployed. To see the error,\n           * delete this comment and run Flow. */\n          <View key=\"$tail_spacer\" style={{[spacerKey]: tailSpacerLength}} />,\n        );\n      }\n    } else if (ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        React.cloneElement(element, {\n          key: '$empty',\n          onLayout: event => {\n            this._onLayoutEmpty(event);\n            if (element.props.onLayout) {\n              element.props.onLayout(event);\n            }\n          },\n          style: StyleSheet.compose(inversionStyle, element.props.style),\n        }),\n      );\n    }\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getFooterCellKey()}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: this.props.scrollEventThrottle, // TODO: Android support\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle\n        ? [inversionStyle, this.props.style]\n        : this.props.style,\n    };\n\n    this._hasMore =\n      this.state.last < this.props.getItemCount(this.props.data) - 1;\n\n    const innerRet = (\n      <VirtualizedListContextProvider\n        value={{\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: this.props.horizontal,\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          getNestedChildState: this._getNestedChildState,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild,\n          debugInfo: this._getDebugInfo(),\n        }}>\n        {React.cloneElement(\n          (\n            this.props.renderScrollComponent ||\n            this._defaultRenderScrollComponent\n          )(scrollProps),\n          {\n            ref: this._captureScrollRef,\n          },\n          cells,\n        )}\n      </VirtualizedListContextProvider>\n    );\n    let ret = innerRet;\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal === !this.props.horizontal &&\n              !this._hasWarned.nesting &&\n              this.context == null\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }\n    if (this.props.debug) {\n      return (\n        <View style={styles.debug}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    const hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _averageCellLength = 0;\n  // Maps a cell key to the set of keys for all outermost child lists within that cell\n  _cellKeysToChildListKeys: Map<string, Set<string>> = new Map();\n  _cellRefs = {};\n  _fillRateHelper: FillRateHelper;\n  _frames = {};\n  _footerLength = 0;\n  _hasDoneInitialScroll = false;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned = {};\n  _headerLength = 0;\n  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update\n  _highestMeasuredFrameIndex = 0;\n  _indicesToKeys: Map<number, string> = new Map();\n  _nestedChildLists: Map<\n    string,\n    {\n      ref: ?VirtualizedList,\n      state: ?ChildListState,\n      ...\n    },\n  > = new Map();\n  _offsetFromParentVirtualizedList: number = 0;\n  _prevParentOffset: number = 0;\n  _scrollMetrics = {\n    contentLength: 0,\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentEndForContentLength = 0;\n  _totalCellLength = 0;\n  _totalCellsMeasured = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state,\n      this._scrollMetrics,\n    );\n  }\n\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // $FlowFixMe - Typing ReactNativeComponent revealed errors\n      return <View {...props} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.111 was deployed. To see the error,\n           * delete this comment and run Flow. */\n          JSON.stringify(props.refreshing) +\n          '`',\n      );\n      return (\n        // $FlowFixMe Invalid prop usage\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe Invalid prop usage\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout(e, cellKey, index) {\n    const layout = e.nativeEvent.layout;\n    const next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true,\n    };\n    const curr = this._frames[cellKey];\n    if (\n      !curr ||\n      next.offset !== curr.offset ||\n      next.length !== curr.length ||\n      index !== curr.index\n    ) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength =\n        this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(\n        this._highestMeasuredFrameIndex,\n        index,\n      );\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n\n    this._computeBlankness();\n    this._updateViewableItems(this.props.data);\n  }\n\n  _onCellUnmount = (cellKey: string) => {\n    const curr = this._frames[cellKey];\n    if (curr) {\n      this._frames[cellKey] = {...curr, inLayout: false};\n    }\n  };\n\n  _triggerRemeasureForChildListsInCell(cellKey: string): void {\n    const childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n    if (childListKeys) {\n      for (let childKey of childListKeys) {\n        const childList = this._nestedChildLists.get(childKey);\n        childList &&\n          childList.ref &&\n          childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n  }\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(\n        this.context.getOutermostParentListRef().getScrollRef(),\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._scrollMetrics.contentLength = this._selectLength({\n            width,\n            height,\n          });\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.getScrollMetrics(),\n          );\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          this._scrollMetrics.offset = scrollMetrics.offset;\n        },\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: Object) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  _onLayoutEmpty = e => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _getFooterCellKey(): string {\n    return this._getCellKey() + '-footer';\n  }\n\n  _onLayoutFooter = e => {\n    this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = e => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength /\n      (this._scrollMetrics.contentLength || 1);\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.68 was deployed. To see the error delete this\n       * comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n    const frameLast = this._getFrameMetricsApprox(this.state.last);\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n\n    return (\n      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={[\n              styles.debugOverlayBase,\n              styles.debugOverlayFrame,\n              {\n                top: f.offset * normalize,\n                height: f.length * normalize,\n              },\n            ]}\n          />\n        ))}\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameLast,\n            {\n              top: windowTop * normalize,\n              height: windowLen * normalize,\n            },\n          ]}\n        />\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameVis,\n            {\n              top: visTop * normalize,\n              height: visLen * normalize,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(\n    metrics: $ReadOnly<{\n      height: number,\n      width: number,\n      ...\n    }>,\n  ): number {\n    return !this.props.horizontal ? metrics.height : metrics.width;\n  }\n\n  _selectOffset(\n    metrics: $ReadOnly<{\n      x: number,\n      y: number,\n      ...\n    }>,\n  ): number {\n    return !this.props.horizontal ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    const {\n      data,\n      getItemCount,\n      onEndReached,\n      onEndReachedThreshold,\n    } = this.props;\n    const {contentLength, visibleLength, offset} = this._scrollMetrics;\n    const distanceFromEnd = contentLength - visibleLength - offset;\n    const threshold = onEndReachedThreshold\n      ? onEndReachedThreshold * visibleLength\n      : 2;\n    if (\n      onEndReached &&\n      this.state.last === getItemCount(data) - 1 &&\n      distanceFromEnd < threshold &&\n      this._scrollMetrics.contentLength !== this._sentEndForContentLength\n    ) {\n      // Only call onEndReached once for a given content length\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({distanceFromEnd});\n    } else if (distanceFromEnd > threshold) {\n      // If the user scrolls away from the end and back again cause\n      // an onEndReached to be triggered again\n      this._sentEndForContentLength = 0;\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    if (\n      width > 0 &&\n      height > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasDoneInitialScroll\n    ) {\n      if (this.props.contentOffset == null) {\n        this.scrollToIndex({\n          animated: false,\n          index: this.props.initialScrollIndex,\n        });\n      }\n      this._hasDoneInitialScroll = true;\n    }\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scrollMetrics.contentLength = this._selectLength({height, width});\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n    ...\n  }) => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._scrollMetrics.contentLength;\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._selectOffset(e.nativeEvent.contentOffset);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._scrollMetrics.contentLength === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset,\n      } = this._convertParentScrollMetrics({\n        visibleLength,\n        offset,\n      }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n    this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n    };\n    this._updateViewableItems(this.props.data);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEndReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _scheduleCellsToRenderUpdate() {\n    const {first, last} = this.state;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const scrollingThreshold =\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete\n       * this comment and run Flow. */\n      (this.props.onEndReachedThreshold * visibleLength) / 2;\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop = offset - this._getFrameMetricsApprox(first).offset;\n      hiPri =\n        hiPri || distTop < 0 || (velocity < -2 && distTop < scrollingThreshold);\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (last < itemCount - 1) {\n      const distBottom =\n        this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri =\n        hiPri ||\n        distBottom < 0 ||\n        (velocity > 2 && distBottom < scrollingThreshold);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (\n      hiPri &&\n      (this._averageCellLength || this.props.getItemLayout) &&\n      !this._hiPriInProgress\n    ) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _onScrollBeginDrag = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e): void => {\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollEnd = (e): void => {\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    const {data, getItemCount, onEndReachedThreshold} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    this._updateViewableItems(data);\n    if (!data) {\n      return;\n    }\n    this.setState(state => {\n      let newState;\n      const {contentLength, offset, visibleLength} = this._scrollMetrics;\n      if (!isVirtualizationDisabled) {\n        // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n        // and wipe out the initialNumToRender rendered elements.\n        // So let's wait until the scroll view metrics have been set up. And until then,\n        // we will trust the initialNumToRender suggestion\n        if (visibleLength > 0 && contentLength > 0) {\n          // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n          // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n          // So let's wait until we've scrolled the view to the right place. And until then,\n          // we will trust the initialScrollIndex suggestion.\n          if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n            newState = computeWindowedRenderLimits(\n              this.props,\n              state,\n              this._getFrameMetricsApprox,\n              this._scrollMetrics,\n            );\n          }\n        }\n      } else {\n        const distanceFromEnd = contentLength - visibleLength - offset;\n        const renderAhead =\n          /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.63 was deployed. To see the error\n           * delete this comment and run Flow. */\n          distanceFromEnd < onEndReachedThreshold * visibleLength\n            ? this.props.maxToRenderPerBatch\n            : 0;\n        newState = {\n          first: 0,\n          last: Math.min(state.last + renderAhead, getItemCount(data) - 1),\n        };\n      }\n      if (newState && this._nestedChildLists.size > 0) {\n        const newFirst = newState.first;\n        const newLast = newState.last;\n        // If some cell in the new state has a child list in it, we should only render\n        // up through that item, so that we give that list a chance to render.\n        // Otherwise there's churn from multiple child lists mounting and un-mounting\n        // their items.\n        for (let ii = newFirst; ii <= newLast; ii++) {\n          const cellKeyForIndex = this._indicesToKeys.get(ii);\n          const childListKeys =\n            cellKeyForIndex &&\n            this._cellKeysToChildListKeys.get(cellKeyForIndex);\n          if (!childListKeys) {\n            continue;\n          }\n          let someChildHasMore = false;\n          // For each cell, need to check whether any child list in it has more elements to render\n          for (let childKey of childListKeys) {\n            const childList = this._nestedChildLists.get(childKey);\n            if (childList && childList.ref && childList.ref.hasMore()) {\n              someChildHasMore = true;\n              break;\n            }\n          }\n          if (someChildHasMore) {\n            newState.last = ii;\n            break;\n          }\n        }\n      }\n      if (\n        newState != null &&\n        newState.first === state.first &&\n        newState.last === state.last\n      ) {\n        newState = null;\n      }\n      return newState;\n    });\n  };\n\n  _createViewToken = (index: number, isViewable: boolean) => {\n    const {data, getItem, keyExtractor} = this.props;\n    const item = getItem(data, index);\n    return {index, item, key: keyExtractor(item, index), isViewable};\n  };\n\n  _getFrameMetricsApprox = (\n    index: number,\n  ): {\n    length: number,\n    offset: number,\n    ...\n  } => {\n    const frame = this._getFrameMetrics(index);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {getItemLayout} = this.props;\n      invariant(\n        !getItemLayout,\n        'Should not have to estimate frames when a measurement metrics function is provided',\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n      };\n    }\n  };\n\n  _getFrameMetrics = (\n    index: number,\n  ): ?{\n    length: number,\n    offset: number,\n    index: number,\n    inLayout?: boolean,\n    ...\n  } => {\n    const {\n      data,\n      getItem,\n      getItemCount,\n      getItemLayout,\n      keyExtractor,\n    } = this.props;\n    invariant(\n      getItemCount(data) > index,\n      'Tried to get frame for out of range index ' + index,\n    );\n    const item = getItem(data, index);\n    let frame = item && this._frames[keyExtractor(item, index)];\n    if (!frame || frame.index !== index) {\n      if (getItemLayout) {\n        frame = getItemLayout(data, index);\n      }\n    }\n    /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.63 was deployed. To see the error delete this\n     * comment and run Flow. */\n    return frame;\n  };\n\n  _updateViewableItems(data: any) {\n    const {getItemCount} = this.props;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        getItemCount(data),\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        this.state,\n      );\n    });\n  }\n}\n\ntype CellRendererProps = {\n  CellRendererComponent?: ?React.ComponentType<any>,\n  ItemSeparatorComponent: ?React.ComponentType<*>,\n  cellKey: string,\n  fillRateHelper: FillRateHelper,\n  horizontal: ?boolean,\n  index: number,\n  inversionStyle: ViewStyleProp,\n  item: Item,\n  // This is extracted by ScrollViewStickyHeader\n  onLayout: (event: Object) => void,\n  onUnmount: (cellKey: string) => void,\n  onUpdateSeparators: (cellKeys: Array<?string>, props: Object) => void,\n  parentProps: {\n    // e.g. height, y,\n    getItemLayout?: (\n      data: any,\n      index: number,\n    ) => {\n      length: number,\n      offset: number,\n      index: number,\n      ...\n    },\n    renderItem?: ?RenderItemType<Item>,\n    ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),\n    ...\n  },\n  prevCellKey: ?string,\n  ...\n};\n\ntype CellRendererState = {\n  separatorProps: $ReadOnly<{|\n    highlighted: boolean,\n    leadingItem: ?Item,\n  |}>,\n  ...\n};\n\nclass CellRenderer extends React.Component<\n  CellRendererProps,\n  CellRendererState,\n> {\n  state = {\n    separatorProps: {\n      highlighted: false,\n      leadingItem: this.props.item,\n    },\n  };\n\n  static getDerivedStateFromProps(\n    props: CellRendererProps,\n    prevState: CellRendererState,\n  ): ?CellRendererState {\n    return {\n      separatorProps: {\n        ...prevState.separatorProps,\n        leadingItem: props.item,\n      },\n    };\n  }\n\n  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  _separators = {\n    highlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: true,\n      });\n    },\n    unhighlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: false,\n      });\n    },\n    updateProps: (select: 'leading' | 'trailing', newProps: Object) => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators(\n        [select === 'leading' ? prevCellKey : cellKey],\n        newProps,\n      );\n    },\n  };\n\n  updateSeparatorProps(newProps: Object) {\n    this.setState(state => ({\n      separatorProps: {...state.separatorProps, ...newProps},\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  _renderElement(renderItem, ListItemComponent, item, index) {\n    if (renderItem && ListItemComponent) {\n      console.warn(\n        'VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' +\n          ' precedence over renderItem.',\n      );\n    }\n\n    if (ListItemComponent) {\n      /* $FlowFixMe(>=0.108.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.108 was deployed. To see the error, delete\n       * this comment and run Flow. */\n      return React.createElement(ListItemComponent, {\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    if (renderItem) {\n      return renderItem({\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    invariant(\n      false,\n      'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.',\n    );\n  }\n\n  render() {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      fillRateHelper,\n      horizontal,\n      item,\n      index,\n      inversionStyle,\n      parentProps,\n    } = this.props;\n    const {renderItem, getItemLayout, ListItemComponent} = parentProps;\n    const element = this._renderElement(\n      renderItem,\n      ListItemComponent,\n      item,\n      index,\n    );\n\n    const onLayout =\n      /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.68 was deployed. To see the error delete this\n       * comment and run Flow. */\n      getItemLayout && !parentProps.debug && !fillRateHelper.enabled()\n        ? undefined\n        : this.props.onLayout;\n    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n    const itemSeparator = ItemSeparatorComponent && (\n      <ItemSeparatorComponent {...this.state.separatorProps} />\n    );\n    const cellStyle = inversionStyle\n      ? horizontal\n        ? [styles.rowReverse, inversionStyle]\n        : [styles.columnReverse, inversionStyle]\n      : horizontal\n      ? [styles.row, inversionStyle]\n      : inversionStyle;\n    const result = !CellRendererComponent ? (\n      /* $FlowFixMe(>=0.89.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.89 was deployed. To see the error, delete\n       * this comment and run Flow. */\n      <View style={cellStyle} onLayout={onLayout}>\n        {element}\n        {itemSeparator}\n      </View>\n    ) : (\n      <CellRendererComponent\n        {...this.props}\n        style={cellStyle}\n        onLayout={onLayout}>\n        {element}\n        {itemSeparator}\n      </CellRendererComponent>\n    );\n\n    return (\n      <VirtualizedListCellContextProvider cellKey={this.props.cellKey}>\n        {result}\n      </VirtualizedListCellContextProvider>\n    );\n  }\n}\n\nfunction describeNestedLists(childList: {\n  +cellKey: string,\n  +key: string,\n  +ref: VirtualizedList,\n  +parentDebugInfo: ListDebugInfo,\n  +horizontal: boolean,\n  ...\n}) {\n  let trace =\n    'VirtualizedList trace:\\n' +\n    `  Child (${childList.horizontal ? 'horizontal' : 'vertical'}):\\n` +\n    `    listKey: ${childList.key}\\n` +\n    `    cellKey: ${childList.cellKey}`;\n\n  let debugInfo = childList.parentDebugInfo;\n  while (debugInfo) {\n    trace +=\n      `\\n  Parent (${debugInfo.horizontal ? 'horizontal' : 'vertical'}):\\n` +\n      `    listKey: ${debugInfo.listKey}\\n` +\n      `    cellKey: ${debugInfo.cellKey}`;\n    debugInfo = debugInfo.parent;\n  }\n  return trace;\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{scaleY: -1}],\n  },\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse',\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse',\n  },\n  debug: {\n    flex: 1,\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1,\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange',\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n});\n\nmodule.exports = VirtualizedList;\n"]},"metadata":{},"sourceType":"module"}