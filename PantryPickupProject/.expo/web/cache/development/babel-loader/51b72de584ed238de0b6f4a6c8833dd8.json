{"ast":null,"code":"'use strict';\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport TouchableWithoutFeedback from \"../../Components/Touchable/TouchableWithoutFeedback\";\nimport View from \"../../Components/View/View\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction LogBoxButton(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      pressed = _React$useState2[0],\n      setPressed = _React$useState2[1];\n\n  var backgroundColor = props.backgroundColor;\n\n  if (!backgroundColor) {\n    backgroundColor = {\n      default: LogBoxStyle.getBackgroundColor(0.95),\n      pressed: LogBoxStyle.getBackgroundColor(0.6)\n    };\n  }\n\n  var content = _jsx(View, {\n    style: StyleSheet.compose({\n      backgroundColor: pressed ? backgroundColor.pressed : backgroundColor.default\n    }, props.style),\n    children: props.children\n  });\n\n  return props.onPress == null ? content : _jsx(TouchableWithoutFeedback, {\n    hitSlop: props.hitSlop,\n    onPress: props.onPress,\n    onPressIn: function onPressIn() {\n      return setPressed(true);\n    },\n    onPressOut: function onPressOut() {\n      return setPressed(false);\n    },\n    children: content\n  });\n}\n\nexport default LogBoxButton;","map":{"version":3,"sources":["C:/Users/nicol/Documents/Repos/HackDavis/PantryPickupProject/node_modules/react-native/Libraries/LogBox/UI/LogBoxButton.js"],"names":["React","StyleSheet","TouchableWithoutFeedback","View","LogBoxStyle","LogBoxButton","props","useState","pressed","setPressed","backgroundColor","default","getBackgroundColor","content","compose","style","children","onPress","hitSlop"],"mappings":"AAUA;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP;AACA,OAAOC,wBAAP;AACA,OAAOC,IAAP;AACA,OAAO,KAAKC,WAAZ;;;AAgBA,SAASC,YAAT,CAAsBC,KAAtB,EAAgD;AAC9C,wBAA8BN,KAAK,CAACO,QAAN,CAAe,KAAf,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAIC,eAAe,GAAGJ,KAAK,CAACI,eAA5B;;AACA,MAAI,CAACA,eAAL,EAAsB;AACpBA,IAAAA,eAAe,GAAG;AAChBC,MAAAA,OAAO,EAAEP,WAAW,CAACQ,kBAAZ,CAA+B,IAA/B,CADO;AAEhBJ,MAAAA,OAAO,EAAEJ,WAAW,CAACQ,kBAAZ,CAA+B,GAA/B;AAFO,KAAlB;AAID;;AAED,MAAMC,OAAO,GACX,KAAC,IAAD;AACE,IAAA,KAAK,EAAEZ,UAAU,CAACa,OAAX,CACL;AACEJ,MAAAA,eAAe,EAAEF,OAAO,GACpBE,eAAe,CAACF,OADI,GAEpBE,eAAe,CAACC;AAHtB,KADK,EAMLL,KAAK,CAACS,KAND,CADT;AAAA,cASGT,KAAK,CAACU;AATT,IADF;;AAcA,SAAOV,KAAK,CAACW,OAAN,IAAiB,IAAjB,GACLJ,OADK,GAGL,KAAC,wBAAD;AACE,IAAA,OAAO,EAAEP,KAAK,CAACY,OADjB;AAEE,IAAA,OAAO,EAAEZ,KAAK,CAACW,OAFjB;AAGE,IAAA,SAAS,EAAE;AAAA,aAAMR,UAAU,CAAC,IAAD,CAAhB;AAAA,KAHb;AAIE,IAAA,UAAU,EAAE;AAAA,aAAMA,UAAU,CAAC,KAAD,CAAhB;AAAA,KAJd;AAAA,cAKGI;AALH,IAHF;AAWD;;AAED,eAAeR,YAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport * as React from 'react';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport TouchableWithoutFeedback from '../../Components/Touchable/TouchableWithoutFeedback';\nimport View from '../../Components/View/View';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport type {EdgeInsetsProp} from '../../StyleSheet/EdgeInsetsPropType';\nimport type {ViewStyleProp} from '../../StyleSheet/StyleSheet';\nimport type {PressEvent} from '../../Types/CoreEventTypes';\n\ntype Props = $ReadOnly<{|\n  backgroundColor: $ReadOnly<{|\n    default: string,\n    pressed: string,\n  |}>,\n  children?: React.Node,\n  hitSlop?: ?EdgeInsetsProp,\n  onPress?: ?(event: PressEvent) => void,\n  style?: ViewStyleProp,\n|}>;\n\nfunction LogBoxButton(props: Props): React.Node {\n  const [pressed, setPressed] = React.useState(false);\n\n  let backgroundColor = props.backgroundColor;\n  if (!backgroundColor) {\n    backgroundColor = {\n      default: LogBoxStyle.getBackgroundColor(0.95),\n      pressed: LogBoxStyle.getBackgroundColor(0.6),\n    };\n  }\n\n  const content = (\n    <View\n      style={StyleSheet.compose(\n        {\n          backgroundColor: pressed\n            ? backgroundColor.pressed\n            : backgroundColor.default,\n        },\n        props.style,\n      )}>\n      {props.children}\n    </View>\n  );\n\n  return props.onPress == null ? (\n    content\n  ) : (\n    <TouchableWithoutFeedback\n      hitSlop={props.hitSlop}\n      onPress={props.onPress}\n      onPressIn={() => setPressed(true)}\n      onPressOut={() => setPressed(false)}>\n      {content}\n    </TouchableWithoutFeedback>\n  );\n}\n\nexport default LogBoxButton;\n"]},"metadata":{},"sourceType":"module"}